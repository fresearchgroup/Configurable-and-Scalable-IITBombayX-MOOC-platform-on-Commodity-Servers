Capturing output to logs/install-20190529-233013.log
Installation started at 2019-05-29 23:30:13
Installing release 'open-release/ironwood.1'
Reading package lists...
Building dependency tree...
Reading state information...
python-software-properties is already the newest version (0.96.20.8).
The following package was automatically installed and is no longer required:
  snapd-login-service
Use 'sudo apt autoremove' to remove it.
0 upgraded, 0 newly installed, 0 to remove and 6 not upgraded.
gpg: keyring `/tmp/tmprb7q8saz/secring.gpg' created
gpg: keyring `/tmp/tmprb7q8saz/pubring.gpg' created
gpg: requesting key BA9EF27F from hkp server keyserver.ubuntu.com
gpg: /tmp/tmprb7q8saz/trustdb.gpg: trustdb created
gpg: key BA9EF27F: public key "Launchpad Toolchain builds" imported
gpg: Total number processed: 1
gpg:               imported: 1  (RSA: 1)
OK
Ign:1 http://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.2 InRelease
Hit:2 http://ppa.launchpad.net/git-core/ppa/ubuntu xenial InRelease
Hit:3 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:4 http://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.2 Release
Hit:6 http://ppa.edx.org xenial InRelease
Hit:7 http://in.archive.ubuntu.com/ubuntu xenial InRelease
Hit:8 http://ppa.launchpad.net/ubuntu-toolchain-r/test/ubuntu xenial InRelease
Hit:9 http://nginx.org/packages/ubuntu xenial InRelease
Hit:10 http://in.archive.ubuntu.com/ubuntu xenial-updates InRelease
Hit:11 http://in.archive.ubuntu.com/ubuntu xenial-backports InRelease
Hit:12 https://packagecloud.io/rabbitmq/rabbitmq-server/ubuntu xenial InRelease
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
Calculating upgrade...
The following package was automatically installed and is no longer required:
  snapd-login-service
Use 'sudo apt autoremove' to remove it.
The following packages have been kept back:
  rabbitmq-server
The following packages will be upgraded:
  mongodb-org mongodb-org-mongos mongodb-org-server mongodb-org-shell
  mongodb-org-tools
5 upgraded, 0 newly installed, 0 to remove and 1 not upgraded.
Need to get 31.8 MB/51.8 MB of archives.
After this operation, 127 kB of additional disk space will be used.
Get:1 http://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.2/multiverse amd64 mongodb-org-tools amd64 3.2.22 [31.8 MB]
Get:2 http://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.2/multiverse amd64 mongodb-org amd64 3.2.22 [3,564 B]
Fetched 26.3 MB in 1min 32s (284 kB/s)
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 227249 files and directories currently installed.)
Preparing to unpack .../mongodb-org-shell_3.2.22_amd64.deb ...
Unpacking mongodb-org-shell (3.2.22) over (3.2.16) ...
Preparing to unpack .../mongodb-org-server_3.2.22_amd64.deb ...
Unpacking mongodb-org-server (3.2.22) over (3.2.16) ...
Preparing to unpack .../mongodb-org-mongos_3.2.22_amd64.deb ...
Unpacking mongodb-org-mongos (3.2.22) over (3.2.16) ...
Preparing to unpack .../mongodb-org-tools_3.2.22_amd64.deb ...
Unpacking mongodb-org-tools (3.2.22) over (3.2.16) ...
Preparing to unpack .../mongodb-org_3.2.22_amd64.deb ...
Unpacking mongodb-org (3.2.22) over (3.2.16) ...
Processing triggers for man-db (2.7.5-1) ...
Setting up mongodb-org-shell (3.2.22) ...
Setting up mongodb-org-server (3.2.22) ...
Setting up mongodb-org-mongos (3.2.22) ...
Setting up mongodb-org-tools (3.2.22) ...
Setting up mongodb-org (3.2.22) ...
Reading package lists...
Building dependency tree...
Reading state information...
build-essential is already the newest version (12.1ubuntu2).
g++ is already the newest version (4:5.3.1-1ubuntu1).
gcc is already the newest version (4:5.3.1-1ubuntu1).
libxmlsec1-dev is already the newest version (1.2.20-2ubuntu4).
swig is already the newest version (3.0.8-0ubuntu3).
curl is already the newest version (7.47.0-1ubuntu2.13).
libfreetype6-dev is already the newest version (2.6.1-0.1ubuntu2.3).
libmysqlclient-dev is already the newest version (5.7.26-0ubuntu0.16.04.1).
libxml2-dev is already the newest version (2.9.3+dfsg1-1ubuntu0.6).
libxslt1-dev is already the newest version (1.1.28-2.1ubuntu0.2).
python-apt is already the newest version (1.1.0~beta1ubuntu0.16.04.4).
python-dev is already the newest version (2.7.12-1~16.04).
software-properties-common is already the newest version (0.96.20.8).
python-pip is already the newest version (8.1.1-2ubuntu0.4).
git-core is already the newest version (1:2.14.2-1~ppa0~ubuntu16.04.1).
The following package was automatically installed and is no longer required:
  snapd-login-service
Use 'sudo apt autoremove' to remove it.
0 upgraded, 0 newly installed, 0 to remove and 1 not upgraded.
The directory '/home/soumyakant/.cache/pip/http' or its parent directory is not owned by the current user and the cache has been disabled. Please check the permissions and owner of that directory. If executing pip with sudo, you may want sudo's -H flag.
The directory '/home/soumyakant/.cache/pip' or its parent directory is not owned by the current user and caching wheels has been disabled. check the permissions and owner of that directory. If executing pip with sudo, you may want sudo's -H flag.
Requirement already up-to-date: pip==9.0.3 in /usr/local/lib/python2.7/dist-packages
You are using pip version 9.0.3, however version 19.1.1 is available.
You should consider upgrading via the 'pip install --upgrade pip' command.
The directory '/home/soumyakant/.cache/pip/http' or its parent directory is not owned by the current user and the cache has been disabled. Please check the permissions and owner of that directory. If executing pip with sudo, you may want sudo's -H flag.
The directory '/home/soumyakant/.cache/pip' or its parent directory is not owned by the current user and caching wheels has been disabled. check the permissions and owner of that directory. If executing pip with sudo, you may want sudo's -H flag.
Requirement already up-to-date: setuptools==39.0.1 in /usr/local/lib/python2.7/dist-packages
You are using pip version 9.0.3, however version 19.1.1 is available.
You should consider upgrading via the 'pip install --upgrade pip' command.
Requirement already up-to-date: virtualenv==15.2.0 in /usr/local/lib/python2.7/dist-packages
You are using pip version 9.0.3, however version 19.1.1 is available.
You should consider upgrading via the 'pip install --upgrade pip' command.
fatal: destination path 'configuration' already exists and is not an empty directory.
HEAD is now at 68051dc1e Add list of logout URIs for other svcs upon LMS logout.
From https://github.com/edx/configuration
 * [new branch]          aali/OPS-3803_alert_on_primary_key -> origin/aali/OPS-3803_alert_on_primary_key
 + d0d4a4620...dda8fae12 aed/registrar-sandbox -> origin/aed/registrar-sandbox  (forced update)
 * [new branch]          coryleeio/flatten_process_hierarchy -> origin/coryleeio/flatten_process_hierarchy
 * [new branch]          feanil/read_only      -> origin/feanil/read_only
   ecd2e53f4..5bb950dd5  master                -> origin/master
 * [new branch]          nedbat/tm.test        -> origin/nedbat/tm.test
   6fc347c0a..7d79d3f5a  yonkers-sandbox       -> origin/yonkers-sandbox
 * [new branch]          youngstrom/bump-jenkins-plugins -> origin/youngstrom/bump-jenkins-plugins
You are not currently on a branch.
Please specify which branch you want to merge with.
See git-pull(1) for details.

    git pull <remote> <branch>

Requirement already satisfied: ansible==2.3.1.0 in /usr/local/lib/python2.7/dist-packages (from -r requirements.txt (line 7))
Requirement already satisfied: asn1crypto==0.24.0 in /usr/local/lib/python2.7/dist-packages (from -r requirements.txt (line 8))
Requirement already satisfied: awscli==1.15.19 in /usr/local/lib/python2.7/dist-packages (from -r requirements.txt (line 9))
Requirement already satisfied: bcrypt==3.1.4 in /usr/local/lib/python2.7/dist-packages (from -r requirements.txt (line 10))
Requirement already satisfied: boto3==1.7.14 in /usr/local/lib/python2.7/dist-packages (from -r requirements.txt (line 11))
Requirement already satisfied: boto==2.48.0 in /usr/local/lib/python2.7/dist-packages (from -r requirements.txt (line 12))
Requirement already satisfied: botocore==1.10.19 in /usr/local/lib/python2.7/dist-packages (from -r requirements.txt (line 13))
Requirement already satisfied: certifi==2018.4.16 in /usr/local/lib/python2.7/dist-packages (from -r requirements.txt (line 14))
Requirement already satisfied: cffi==1.11.5 in /usr/local/lib/python2.7/dist-packages (from -r requirements.txt (line 15))
Requirement already satisfied: chardet==3.0.4 in /usr/local/lib/python2.7/dist-packages (from -r requirements.txt (line 16))
Requirement already satisfied: colorama==0.3.7 in /usr/local/lib/python2.7/dist-packages (from -r requirements.txt (line 17))
Requirement already satisfied: cryptography==2.2.2 in /usr/local/lib/python2.7/dist-packages (from -r requirements.txt (line 18))
Requirement already satisfied: datadog==0.8.0 in /usr/local/lib/python2.7/dist-packages (from -r requirements.txt (line 19))
Requirement already satisfied: decorator==4.3.0 in /usr/local/lib/python2.7/dist-packages (from -r requirements.txt (line 20))
Requirement already satisfied: docopt==0.6.2 in /usr/local/lib/python2.7/dist-packages (from -r requirements.txt (line 21))
Requirement already satisfied: docutils==0.14 in /usr/local/lib/python2.7/dist-packages (from -r requirements.txt (line 22))
Requirement already satisfied: ecdsa==0.13 in /usr/local/lib/python2.7/dist-packages (from -r requirements.txt (line 23))
Requirement already satisfied: enum34==1.1.6 in /usr/local/lib/python2.7/dist-packages (from -r requirements.txt (line 24))
Requirement already satisfied: futures==3.2.0 in /usr/local/lib/python2.7/dist-packages (from -r requirements.txt (line 25))
Requirement already satisfied: idna==2.6 in /usr/local/lib/python2.7/dist-packages (from -r requirements.txt (line 26))
Requirement already satisfied: ipaddress==1.0.22 in /usr/local/lib/python2.7/dist-packages (from -r requirements.txt (line 27))
Requirement already satisfied: jinja2==2.8 in /usr/lib/python2.7/dist-packages (from -r requirements.txt (line 28))
Requirement already satisfied: jmespath==0.9.3 in /usr/local/lib/python2.7/dist-packages (from -r requirements.txt (line 29))
Requirement already satisfied: markupsafe==1.0 in /usr/local/lib/python2.7/dist-packages (from -r requirements.txt (line 30))
Requirement already satisfied: mysql-python==1.2.5 in /usr/local/lib/python2.7/dist-packages (from -r requirements.txt (line 31))
Requirement already satisfied: networkx==1.11 in /usr/local/lib/python2.7/dist-packages (from -r requirements.txt (line 32))
Requirement already satisfied: paramiko==2.4.1 in /usr/local/lib/python2.7/dist-packages (from -r requirements.txt (line 33))
Requirement already satisfied: pathlib2==2.3.0 in /usr/local/lib/python2.7/dist-packages (from -r requirements.txt (line 34))
Requirement already satisfied: prettytable==0.7.2 in /usr/local/lib/python2.7/dist-packages (from -r requirements.txt (line 35))
Requirement already satisfied: pyasn1==0.4.3 in /usr/local/lib/python2.7/dist-packages (from -r requirements.txt (line 36))
Requirement already satisfied: pycparser==2.18 in /usr/local/lib/python2.7/dist-packages (from -r requirements.txt (line 37))
Requirement already satisfied: pycrypto==2.6.1 in /usr/local/lib/python2.7/dist-packages (from -r requirements.txt (line 38))
Requirement already satisfied: pymongo==3.2.2 in /usr/local/lib/python2.7/dist-packages (from -r requirements.txt (line 39))
Requirement already satisfied: pynacl==1.2.1 in /usr/local/lib/python2.7/dist-packages (from -r requirements.txt (line 40))
Requirement already satisfied: python-dateutil==2.7.3 in /usr/local/lib/python2.7/dist-packages (from -r requirements.txt (line 41))
Requirement already satisfied: python-simple-hipchat==0.2 in /usr/local/lib/python2.7/dist-packages (from -r requirements.txt (line 42))
Requirement already satisfied: pyyaml==3.12 in /usr/local/lib/python2.7/dist-packages (from -r requirements.txt (line 43))
Requirement already satisfied: requests==2.18.4 in /usr/local/lib/python2.7/dist-packages (from -r requirements.txt (line 44))
Requirement already satisfied: rsa==3.4.2 in /usr/local/lib/python2.7/dist-packages (from -r requirements.txt (line 45))
Requirement already satisfied: s3transfer==0.1.13 in /usr/local/lib/python2.7/dist-packages (from -r requirements.txt (line 46))
Requirement already satisfied: scandir==1.7 in /usr/local/lib/python2.7/dist-packages (from -r requirements.txt (line 47))
Requirement already satisfied: simplejson==3.16.0 in /usr/local/lib/python2.7/dist-packages (from -r requirements.txt (line 48))
Requirement already satisfied: six==1.11.0 in /usr/local/lib/python2.7/dist-packages (from -r requirements.txt (line 49))
Requirement already satisfied: urllib3==1.22 in /usr/local/lib/python2.7/dist-packages (from -r requirements.txt (line 50))
Requirement already satisfied: wsgiref==0.1.2 in /usr/lib/python2.7 (from -r requirements.txt (line 51))
Requirement already satisfied: setuptools in /usr/local/lib/python2.7/dist-packages (from ansible==2.3.1.0->-r requirements.txt (line 7))
You are using pip version 9.0.3, however version 19.1.1 is available.
You should consider upgrading via the 'pip install --upgrade pip' command.
 [WARNING]: While constructing a mapping from
/var/tmp/configuration/playbooks/roles/forum/defaults/main.yml, line 75, column
3, found a duplicate dict key (RACK_ENV). Using last defined value only.
 [WARNING]: While constructing a mapping from
/var/tmp/configuration/playbooks/roles/forum/defaults/main.yml, line 75, column
3, found a duplicate dict key (SINATRA_ENV). Using last defined value only.
 [WARNING]: While constructing a mapping from
/var/tmp/configuration/playbooks/roles/forum/defaults/main.yml, line 75, column
3, found a duplicate dict key (SEARCH_SERVER). Using last defined value only.
 [WARNING]: While constructing a mapping from
/var/tmp/configuration/playbooks/roles/forum/defaults/main.yml, line 75, column
3, found a duplicate dict key (MONGOHQ_URL). Using last defined value only.

PLAY [Bootstrap instance(s)] ***************************************************

TASK [python : Update apt-get] *************************************************
changed: [localhost]

TASK [python : Install packages] ***********************************************
changed: [localhost] => (item=python-minimal)

PLAY [Configure instance(s)] ***************************************************

TASK [Gathering Facts] *********************************************************
ok: [localhost]

TASK [swapfile : Write swapfile] ***********************************************
ok: [localhost]

TASK [swapfile : Set swapfile permissions] *************************************
ok: [localhost]

TASK [swapfile : Create swapfile] **********************************************
skipping: [localhost]

TASK [swapfile : Enable swapfile] **********************************************
skipping: [localhost]

TASK [swapfile : Add swapfile to /etc/fstab] ***********************************
ok: [localhost]

TASK [swapfile : Configure vm.swappiness] **************************************
skipping: [localhost]

TASK [swapfile : Configure vm.vfs_cache_pressure] ******************************
skipping: [localhost]

TASK [server_utils : Check for expired edx key] ********************************
skipping: [localhost]

TASK [server_utils : remove expired edx key] ***********************************
skipping: [localhost]

TASK [server_utils : Install ubuntu system packages] ***************************
skipping: [localhost] => (item=[]) 

TASK [user : debug] ************************************************************
skipping: [localhost]

TASK [user : Create the edxadmin group] ****************************************
skipping: [localhost]

TASK [user : Ensure sudoers.d is read] *****************************************
skipping: [localhost]

TASK [user : Grant full sudo access to the edxadmin group] *********************
skipping: [localhost]

TASK [user : Create the users] *************************************************

TASK [user : Assign admin role to admin users] *********************************

TASK [user : Check the ssh key(s) for user(s) over github] *********************

TASK [user : Print warning if github user(s) missing ssh key] ******************

TASK [user : Halt if USER_FAIL_MISSING_KEYS is true and github user(s) missing ssh key] ***

TASK [user : Get github key(s) and update the authorized_keys file] ************

TASK [user : Create bashrc file for normal users] ******************************

TASK [user : Create .profile for all users] ************************************

TASK [user : Modify shell for restricted users] ********************************

TASK [user : Create bashrc file for restricted users] **************************

TASK [user : Create sudoers file from template] ********************************
skipping: [localhost]

TASK [user : Change home directory ownership to root for restricted users] *****

TASK [user : Create ~/bin directory] *******************************************

TASK [user : Create allowed command links] *************************************

TASK [security : Install security packages] ************************************
skipping: [localhost] => (item=[]) 

TASK [security : Update all system packages] ***********************************
skipping: [localhost]

TASK [security : Configure periodic unattended-upgrades] ***********************
skipping: [localhost]

TASK [security : Disable unattended-upgrades if Xenial (16.04)] ****************
skipping: [localhost] => (item=systemctl disable apt-daily-upgrade.timer) 
skipping: [localhost] => (item=systemctl disable apt-daily.timer) 
skipping: [localhost] => (item=systemctl disable apt-daily.service) 

TASK [security : Disable unattended-upgrades] **********************************
skipping: [localhost]

TASK [security : Only unattended-upgrade from security repo] *******************
skipping: [localhost]

TASK [security : Disable security only updates on unattended-upgrades] *********
skipping: [localhost]

TASK [security : Take security updates during ansible runs] ********************
skipping: [localhost] => (item=unattended-upgrade) 
skipping: [localhost] => (item=unattended-upgrade --dry-run) 

TASK [security : Install security packages] ************************************
skipping: [localhost] => (item=[]) 

TASK [security : Enable automatic start for update service] ********************
skipping: [localhost]

TASK [security : Update all system packages] ***********************************
skipping: [localhost]

TASK [security : Configure security auto-updates] ******************************
skipping: [localhost] => (item={u'regexp': u'^apply_updates', u'line': u'apply_updates = yes'}) 
skipping: [localhost] => (item={u'regexp': u'^update_cmd', u'line': u'update_cmd = security'}) 

TASK [security : Take security updates during ansible runs] ********************
skipping: [localhost] => (item=yum update --security -y) 
skipping: [localhost] => (item=yum check-update --security) 

TASK [common : Check Configuration Sources] ************************************

TASK [common : stat] ***********************************************************
skipping: [localhost]

TASK [common : Update CA Certificates] *****************************************
skipping: [localhost]

TASK [common : stat] ***********************************************************
skipping: [localhost]

TASK [common : Update CA Trust] ************************************************
skipping: [localhost]

TASK [common : Add common_users] ***********************************************
skipping: [localhost] => (item=syslog) 
skipping: [localhost] => (item=www-data) 

TASK [common : check if instance is vagrant] ***********************************
skipping: [localhost]

TASK [common : Add git apt repository] *****************************************
skipping: [localhost]

TASK [common : Add edX PPA apt key] ********************************************
skipping: [localhost]

TASK [common : Update expired apt keys] ****************************************
skipping: [localhost]

TASK [common : Add custom edX PPA] *********************************************
skipping: [localhost]

TASK [common : Install role-independent useful system packages] ****************
skipping: [localhost] => (item=[]) 

TASK [common : Install role-independent useful system packages from custom PPA] ***
skipping: [localhost] => (item=[]) 

TASK [common : Install role-independent useful system packages] ****************
skipping: [localhost] => (item=[]) 

TASK [common : Create common directories] **************************************
skipping: [localhost] => (item={u'path': u'/edx/etc'}) 
skipping: [localhost] => (item={u'path': u'/edx/bin'}) 
skipping: [localhost] => (item={u'path': u'/edx/app'}) 
skipping: [localhost] => (item={u'path': u'/edx/var'}) 
skipping: [localhost] => (item={u'path': u'/etc/rsyslog.d/50-default.conf', u'state': u'absent'}) 
skipping: [localhost] => (item={u'path': u'/etc/logrotate.d/hourly'}) 
skipping: [localhost] => (item={u'owner': u'syslog', u'path': u'/edx/var/log', u'group': u'syslog'}) 

TASK [common : upload sudo config for key forwarding as root] ******************
skipping: [localhost]

TASK [common : pip install virtualenv] *****************************************
skipping: [localhost] => (item=virtualenvwrapper==4.8.2) 
skipping: [localhost] => (item=virtualenv==15.2.0) 
skipping: [localhost] => (item=setuptools==39.0.1) 
skipping: [localhost] => (item=pip==9.0.3) 

TASK [common : update /etc/hosts] **********************************************
skipping: [localhost]

TASK [common : update /etc/hostname] *******************************************
skipping: [localhost]

TASK [common : run hostname] ***************************************************
skipping: [localhost]

TASK [common : Copy the templates to their respestive destination] *************
skipping: [localhost] => (item={u'dest': u'/etc/logrotate.d/hourly/tracking.log', u'src': u'etc/logrotate.d/hourly/edx_logrotate_tracking_log.j2'}) 
skipping: [localhost] => (item={u'dest': u'/etc/cron.hourly/logrotate', u'src': u'etc/cron.hourly/logrotate.j2', u'mode': u'0555'}) 
skipping: [localhost] => (item={u'dest': u'/etc/logrotate.d/hourly/edx-services', u'src': u'etc/logrotate.d/hourly/edx_logrotate.j2'}) 
skipping: [localhost] => (item={u'dest': u'/etc/rsyslog.d/99-edx.conf', u'src': u'edx_rsyslog.j2'}) 

TASK [common : restart rsyslogd] ***********************************************
skipping: [localhost]

TASK [common : Add ntp alert script] *******************************************
skipping: [localhost]

TASK [common : Remove MOTD update checker] *************************************
skipping: [localhost]

TASK [common : Set up a cron job to run the log-ntp-alerts script] *************
skipping: [localhost]

TASK [common : install logrotate configuration] ********************************
skipping: [localhost]

TASK [vhost : Create all service directories] **********************************
skipping: [localhost] => (item={'key': u'data', 'value': {u'owner': u'root', u'path': u'/edx/var/aws', u'group': u'root', u'mode': u'0700'}}) 
skipping: [localhost] => (item={'key': u'home', 'value': {u'owner': u'root', u'path': u'/edx/app/aws', u'group': u'root', u'mode': u'0755'}}) 
skipping: [localhost] => (item={'key': u'logs', 'value': {u'owner': u'syslog', u'path': u'/edx/var/log/aws', u'group': u'syslog', u'mode': u'0650'}}) 

TASK [vhost : Force logrotate on supervisor stop] ******************************
skipping: [localhost]

TASK [vhost : Update /etc/dhcp/dhclient.conf] **********************************
skipping: [localhost]

TASK [vhost : Rerun dhclient to apply template] ********************************
skipping: [localhost]

TASK [vhost : Copy the MOTD template in place] *********************************
skipping: [localhost]

TASK [vhost : Add motd.tail support for 16.04] *********************************
skipping: [localhost]

TASK [vhost : Update sshd logging to VERBOSE] **********************************
skipping: [localhost]

TASK [vhost : Update sshd logging to VERBOSE] **********************************
skipping: [localhost]

TASK [vhost : Restart ssh] *****************************************************
skipping: [localhost]

TASK [vhost : Restart ssh] *****************************************************
skipping: [localhost]

TASK [aws : Gather ec2 facts for use in other roles] ***************************
skipping: [localhost]

TASK [aws : Set the MTU to 1500 temporarily] ***********************************
skipping: [localhost]

TASK [aws : Set the MTU to 1500 permanently] ***********************************
skipping: [localhost]

TASK [aws : Install system packages] *******************************************
skipping: [localhost] => (item=[]) 

TASK [aws : Copy the Python requirements file] *********************************
skipping: [localhost]

TASK [aws : Install aws python packages] ***************************************
skipping: [localhost]

TASK [aws : Copy the boto global config file] **********************************
skipping: [localhost]

TASK [aws : Create s3 log sync script] *****************************************
skipping: [localhost]

TASK [aws : Create symlink for s3 log sync script] *****************************
skipping: [localhost]

TASK [aws : Check if files exist so the next task doesn't fail] ****************
skipping: [localhost] => (item=/etc/update-motd.d/91-release-upgrade) 
skipping: [localhost] => (item=/etc/update-motd.d/51-cloudguest) 
skipping: [localhost] => (item=/usr/share/landscape/landscape-sysinfo.wrapper) 
skipping: [localhost] => (item=/etc/update-motd.d/10-help-text) 

TASK [aws : Update the ssh motd on Ubuntu] *************************************
skipping: [localhost] => (item={'skipped': True, '_ansible_no_log': False, 'skip_reason': u'Conditional result was False', '_ansible_item_result': True, 'item': u'/etc/update-motd.d/91-release-upgrade', 'changed': False}) 
skipping: [localhost] => (item={'skipped': True, '_ansible_no_log': False, 'skip_reason': u'Conditional result was False', '_ansible_item_result': True, 'item': u'/etc/update-motd.d/51-cloudguest', 'changed': False}) 
skipping: [localhost] => (item={'skipped': True, '_ansible_no_log': False, 'skip_reason': u'Conditional result was False', '_ansible_item_result': True, 'item': u'/usr/share/landscape/landscape-sysinfo.wrapper', 'changed': False}) 
skipping: [localhost] => (item={'skipped': True, '_ansible_no_log': False, 'skip_reason': u'Conditional result was False', '_ansible_item_result': True, 'item': u'/etc/update-motd.d/10-help-text', 'changed': False}) 

TASK [server_utils : Check for expired edx key] ********************************
changed: [localhost]

TASK [server_utils : remove expired edx key] ***********************************
skipping: [localhost]

TASK [server_utils : Install ubuntu system packages] ***************************
ok: [localhost] => (item=[u'ack-grep', u'mosh', u'tree', u'screen', u'tmux', u'curl', u'vim', u'dnsutils', u'inetutils-telnet', u'netcat'])

TASK [user : debug] ************************************************************
ok: [localhost] => {
    "user_info": []
}

TASK [user : Create the edxadmin group] ****************************************
ok: [localhost]

TASK [user : Ensure sudoers.d is read] *****************************************
ok: [localhost]

TASK [user : Grant full sudo access to the edxadmin group] *********************
ok: [localhost]

TASK [user : Create the users] *************************************************

TASK [user : Assign admin role to admin users] *********************************

TASK [user : Check the ssh key(s) for user(s) over github] *********************

TASK [user : Print warning if github user(s) missing ssh key] ******************

TASK [user : Halt if USER_FAIL_MISSING_KEYS is true and github user(s) missing ssh key] ***

TASK [user : Get github key(s) and update the authorized_keys file] ************

TASK [user : Create bashrc file for normal users] ******************************

TASK [user : Create .profile for all users] ************************************

TASK [user : Modify shell for restricted users] ********************************

TASK [user : Create bashrc file for restricted users] **************************

TASK [user : Create sudoers file from template] ********************************
ok: [localhost]

TASK [user : Change home directory ownership to root for restricted users] *****

TASK [user : Create ~/bin directory] *******************************************

TASK [user : Create allowed command links] *************************************

TASK [security : Install security packages] ************************************
skipping: [localhost] => (item=[]) 

TASK [security : Update all system packages] ***********************************
skipping: [localhost]

TASK [security : Configure periodic unattended-upgrades] ***********************
skipping: [localhost]

TASK [security : Disable unattended-upgrades if Xenial (16.04)] ****************
skipping: [localhost] => (item=systemctl disable apt-daily-upgrade.timer) 
skipping: [localhost] => (item=systemctl disable apt-daily.timer) 
skipping: [localhost] => (item=systemctl disable apt-daily.service) 

TASK [security : Disable unattended-upgrades] **********************************
skipping: [localhost]

TASK [security : Only unattended-upgrade from security repo] *******************
skipping: [localhost]

TASK [security : Disable security only updates on unattended-upgrades] *********
skipping: [localhost]

TASK [security : Take security updates during ansible runs] ********************
skipping: [localhost] => (item=unattended-upgrade) 
skipping: [localhost] => (item=unattended-upgrade --dry-run) 

TASK [security : Install security packages] ************************************
skipping: [localhost] => (item=[]) 

TASK [security : Enable automatic start for update service] ********************
skipping: [localhost]

TASK [security : Update all system packages] ***********************************
skipping: [localhost]

TASK [security : Configure security auto-updates] ******************************
skipping: [localhost] => (item={u'regexp': u'^apply_updates', u'line': u'apply_updates = yes'}) 
skipping: [localhost] => (item={u'regexp': u'^update_cmd', u'line': u'update_cmd = security'}) 

TASK [security : Take security updates during ansible runs] ********************
skipping: [localhost] => (item=yum update --security -y) 
skipping: [localhost] => (item=yum check-update --security) 

TASK [common : Check Configuration Sources] ************************************

TASK [common : stat] ***********************************************************
ok: [localhost]

TASK [common : Update CA Certificates] *****************************************
changed: [localhost]

TASK [common : stat] ***********************************************************
ok: [localhost]

TASK [common : Update CA Trust] ************************************************
skipping: [localhost]

TASK [common : Add common_users] ***********************************************
ok: [localhost] => (item=www-data)
ok: [localhost] => (item=syslog)

TASK [common : check if instance is vagrant] ***********************************
ok: [localhost]

TASK [common : Add git apt repository] *****************************************
ok: [localhost]

TASK [common : Add edX PPA apt key] ********************************************
ok: [localhost]

TASK [common : Update expired apt keys] ****************************************
changed: [localhost]

TASK [common : Add custom edX PPA] *********************************************
ok: [localhost]

TASK [common : Install role-independent useful system packages] ****************
ok: [localhost] => (item=[u'apt-transport-https', u'ntp', u'acl', u'iotop', u'lynx', u'logrotate', u'rsyslog', u'git', u'unzip', u'python-pip', u'python2.7-dev'])

TASK [common : Install role-independent useful system packages from custom PPA] ***
skipping: [localhost] => (item=[]) 

TASK [common : Install role-independent useful system packages] ****************
skipping: [localhost] => (item=[]) 

TASK [common : Create common directories] **************************************
ok: [localhost] => (item={u'path': u'/edx/var'})
ok: [localhost] => (item={u'path': u'/edx/app'})
ok: [localhost] => (item={u'path': u'/edx/bin'})
changed: [localhost] => (item={u'path': u'/edx/etc'})
ok: [localhost] => (item={u'owner': u'syslog', u'path': u'/edx/var/log', u'group': u'syslog'})
ok: [localhost] => (item={u'path': u'/etc/logrotate.d/hourly'})
ok: [localhost] => (item={u'path': u'/etc/rsyslog.d/50-default.conf', u'state': u'absent'})

TASK [common : upload sudo config for key forwarding as root] ******************
ok: [localhost]

TASK [common : pip install virtualenv] *****************************************
ok: [localhost] => (item=pip==9.0.3)
ok: [localhost] => (item=setuptools==39.0.1)
ok: [localhost] => (item=virtualenv==15.2.0)
ok: [localhost] => (item=virtualenvwrapper==4.8.2)

TASK [common : update /etc/hosts] **********************************************
skipping: [localhost]

TASK [common : update /etc/hostname] *******************************************
skipping: [localhost]

TASK [common : run hostname] ***************************************************
skipping: [localhost]

TASK [common : Copy the templates to their respestive destination] *************
ok: [localhost] => (item={u'dest': u'/etc/rsyslog.d/99-edx.conf', u'src': u'edx_rsyslog.j2'})
ok: [localhost] => (item={u'dest': u'/etc/logrotate.d/hourly/edx-services', u'src': u'etc/logrotate.d/hourly/edx_logrotate.j2'})
ok: [localhost] => (item={u'dest': u'/etc/cron.hourly/logrotate', u'src': u'etc/cron.hourly/logrotate.j2', u'mode': u'0555'})
ok: [localhost] => (item={u'dest': u'/etc/logrotate.d/hourly/tracking.log', u'src': u'etc/logrotate.d/hourly/edx_logrotate_tracking_log.j2'})

TASK [common : restart rsyslogd] ***********************************************
skipping: [localhost]

TASK [common : Add ntp alert script] *******************************************
ok: [localhost]

TASK [common : Remove MOTD update checker] *************************************
ok: [localhost]

TASK [common : Set up a cron job to run the log-ntp-alerts script] *************
ok: [localhost]

TASK [common : install logrotate configuration] ********************************
ok: [localhost]

TASK [nginx : Create Diffie-Hellman parameters to prevent weak key exchange] ***
ok: [localhost]

TASK [nginx : Restrict permissions of DH parameters file] **********************
ok: [localhost]

TASK [nginx : Create nginx app and data dirs] **********************************
ok: [localhost] => (item={u'owner': u'root', u'path': u'/edx/app/nginx', u'group': u'www-data'})
ok: [localhost] => (item={u'owner': u'root', u'path': u'/edx/app/nginx/sites-available', u'group': u'www-data'})
ok: [localhost] => (item={u'owner': u'root', u'path': u'/etc/nginx/sites-enabled', u'group': u'www-data'})
ok: [localhost] => (item={u'owner': u'root', u'path': u'/edx/app/nginx/conf.d', u'group': u'www-data'})
ok: [localhost] => (item={u'owner': u'www-data', u'path': u'/edx/var/nginx', u'group': u'root'})
changed: [localhost] => (item={u'owner': u'www-data', u'path': u'/edx/var/log/nginx', u'group': u'root'})
ok: [localhost] => (item={u'owner': u'www-data', u'path': u'/edx/var/nginx/server-static', u'group': u'root'})

TASK [nginx : Install needed packages] *****************************************
ok: [localhost] => (item=[u'python-passlib'])

TASK [nginx : Add apt key] *****************************************************
ok: [localhost]

TASK [nginx : Add nginx repository] ********************************************
ok: [localhost]

TASK [nginx : Remove old nginx packages] ***************************************
ok: [localhost]

TASK [nginx : Install the nginx package] ***************************************
ok: [localhost]

TASK [nginx : Remove the default site] *****************************************
ok: [localhost]

TASK [nginx : Define server configuration file and common nginx configuration] ***
ok: [localhost] => (item={u'dest': u'/etc/nginx/nginx.conf', u'src': u'etc/nginx/nginx.conf.j2', u'group': u'www-data', u'mode': u'0644'})
ok: [localhost] => (item={u'dest': u'/edx/app/nginx/sites-available/maps', u'src': u'edx/app/nginx/sites-available/maps.j2', u'group': u'root', u'mode': u'0600'})

TASK [nginx : Create robot rules] **********************************************
skipping: [localhost]

TASK [nginx : Creating link for common nginx configuration] ********************
ok: [localhost] => (item=maps)

TASK [nginx : Copying nginx configs for [u'certs', u'cms', u'lms', u'forum', u'xqueue']] ***
ok: [localhost] => (item=certs)
ok: [localhost] => (item=cms)
ok: [localhost] => (item=lms)
ok: [localhost] => (item=forum)
ok: [localhost] => (item=xqueue)

TASK [nginx : Creating nginx config links for [u'certs', u'cms', u'lms', u'forum', u'xqueue']] ***
ok: [localhost] => (item=certs)
ok: [localhost] => (item=cms)
ok: [localhost] => (item=lms)
ok: [localhost] => (item=forum)
ok: [localhost] => (item=xqueue)

TASK [nginx : Copying nginx extra configs] *************************************

TASK [nginx : Creating links for nginx extra configs] **************************

TASK [nginx : Copying custom nginx config] *************************************

TASK [nginx : Copying nginx redirect configs for {}] ***************************

TASK [nginx : Creating nginx redirect links for {}] ****************************

TASK [nginx : Create NGINX server templates] ***********************************
ok: [localhost] => (item={u'lang': u'en', u'img': u'https://upload.wikimedia.org/wikipedia/commons/thumb/1/11/Pendleton_Sinking_Ship.jpg/640px-Pendleton_Sinking_Ship.jpg', u'title': u'Rate limit exceeded', u'style_p': u'font-family: Georgia,Cambria,"Times New Roman",Times,serif; margin: auto; margin-bottom: 1em; font-weight: 200; line-height: 1.4em; font-size: 1.1em; max-width: 80%;', u'style_div': u'margin: auto; width: 800px; text-align: center; padding:20px 0px 0px 0px;', u'img_alt': u'', u'heading': u'Uh oh, we are having some server issues..', u'file': u'rate-limit.html', u'msg': u'If think you have encountered this message in error please let us know at <a href="mailto:technical@example.com">technical@example.com</a>', u'style_h1': u'font-family: "Helvetica Neue",Helvetica,Roboto,Arial,sans-serif; margin-bottom: .3em; font-size: 2.0em; line-height: 1.25em; text-rendering: optimizeLegibility; font-weight: bold; color: #000000;', u'style_p_h2': u'font-family: "Helvetica Neue",Helvetica,Roboto,Arial,sans-serif; margin-bottom: .3em; line-height: 1.25em; text-rendering: optimizeLegibility; font-weight: bold; font-size: 1.8em; color: #5b5e63;'})
ok: [localhost] => (item={u'lang': u'en', u'img': u'https://upload.wikimedia.org/wikipedia/commons/thumb/1/11/Pendleton_Sinking_Ship.jpg/640px-Pendleton_Sinking_Ship.jpg', u'title': u'Server error', u'style_p': u'font-family: Georgia,Cambria,"Times New Roman",Times,serif; margin: auto; margin-bottom: 1em; font-weight: 200; line-height: 1.4em; font-size: 1.1em; max-width: 80%;', u'style_div': u'margin: auto; width: 800px; text-align: center; padding:20px 0px 0px 0px;', u'img_alt': u'', u'heading': u'Uh oh, we are having some server issues..', u'file': u'server-error.html', u'msg': u'We have been notified of the error, if it persists please let us know at <a href="mailto:technical@example.com">technical@example.com</a>', u'style_h1': u'font-family: "Helvetica Neue",Helvetica,Roboto,Arial,sans-serif; margin-bottom: .3em; font-size: 2.0em; line-height: 1.25em; text-rendering: optimizeLegibility; font-weight: bold; color: #000000;', u'style_p_h2': u'font-family: "Helvetica Neue",Helvetica,Roboto,Arial,sans-serif; margin-bottom: .3em; line-height: 1.25em; text-rendering: optimizeLegibility; font-weight: bold; font-size: 1.8em; color: #5b5e63;'})

TASK [nginx : Copy static files] ***********************************************

TASK [nginx : Write out htpasswd file] *****************************************
 [WARNING]: when statements should not include jinja2 templating delimiters
such as {{ }} or {% %}. Found: {{   CERTS_ENABLE_BASIC_AUTH|bool or
ECOMMERCE_ENABLE_BASIC_AUTH|bool or   EDXAPP_CMS_ENABLE_BASIC_AUTH|bool or
EDXAPP_LMS_ENABLE_BASIC_AUTH|bool or
EDXAPP_LMS_PREVIEW_ENABLE_BASIC_AUTH|bool or   KIBANA_ENABLE_BASIC_AUTH|bool or
XQUEUE_ENABLE_BASIC_AUTH|bool or   XSERVER_ENABLE_BASIC_AUTH|bool }}
skipping: [localhost] => (item={u'state': u'present', u'password': u'KL0ACcSjB7aLIyfznZ8MT7VaF4rlWNGGGvh', u'name': u'QNJpM3ZnKvNyvoKKXzjAYKqgoi2JVTB1xVa'}) 

TASK [nginx : Create nginx log file location (just in case)] *******************
changed: [localhost]

TASK [nginx : stat] ************************************************************
ok: [localhost -> localhost]

TASK [nginx : stat] ************************************************************
ok: [localhost -> localhost]

TASK [nginx : copy ssl cert] ***************************************************
skipping: [localhost]

TASK [nginx : copy ssl key] ****************************************************
skipping: [localhost]

TASK [nginx : Removing default nginx config and restart (enabled)] *************
ok: [localhost]

TASK [nginx : Set up nginx access log rotation] ********************************
ok: [localhost]

TASK [nginx : Set up nginx error log rotation] *********************************
ok: [localhost]

RUNNING HANDLER [nginx : restart nginx] ****************************************
changed: [localhost]

TASK [nginx : make sure nginx has started] *************************************
ok: [localhost]

TASK [security : Install security packages] ************************************
skipping: [localhost] => (item=[]) 

TASK [security : Update all system packages] ***********************************
skipping: [localhost]

TASK [security : Configure periodic unattended-upgrades] ***********************
skipping: [localhost]

TASK [security : Disable unattended-upgrades if Xenial (16.04)] ****************
skipping: [localhost] => (item=systemctl disable apt-daily-upgrade.timer) 
skipping: [localhost] => (item=systemctl disable apt-daily.timer) 
skipping: [localhost] => (item=systemctl disable apt-daily.service) 

TASK [security : Disable unattended-upgrades] **********************************
skipping: [localhost]

TASK [security : Only unattended-upgrade from security repo] *******************
skipping: [localhost]

TASK [security : Disable security only updates on unattended-upgrades] *********
skipping: [localhost]

TASK [security : Take security updates during ansible runs] ********************
skipping: [localhost] => (item=unattended-upgrade) 
skipping: [localhost] => (item=unattended-upgrade --dry-run) 

TASK [security : Install security packages] ************************************
skipping: [localhost] => (item=[]) 

TASK [security : Enable automatic start for update service] ********************
skipping: [localhost]

TASK [security : Update all system packages] ***********************************
skipping: [localhost]

TASK [security : Configure security auto-updates] ******************************
skipping: [localhost] => (item={u'regexp': u'^apply_updates', u'line': u'apply_updates = yes'}) 
skipping: [localhost] => (item={u'regexp': u'^update_cmd', u'line': u'update_cmd = security'}) 

TASK [security : Take security updates during ansible runs] ********************
skipping: [localhost] => (item=yum update --security -y) 
skipping: [localhost] => (item=yum check-update --security) 

TASK [security : Install security packages] ************************************
skipping: [localhost] => (item=[]) 

TASK [security : Update all system packages] ***********************************
skipping: [localhost]

TASK [security : Configure periodic unattended-upgrades] ***********************
skipping: [localhost]

TASK [security : Disable unattended-upgrades if Xenial (16.04)] ****************
skipping: [localhost] => (item=systemctl disable apt-daily-upgrade.timer) 
skipping: [localhost] => (item=systemctl disable apt-daily.timer) 
skipping: [localhost] => (item=systemctl disable apt-daily.service) 

TASK [security : Disable unattended-upgrades] **********************************
skipping: [localhost]

TASK [security : Only unattended-upgrade from security repo] *******************
skipping: [localhost]

TASK [security : Disable security only updates on unattended-upgrades] *********
skipping: [localhost]

TASK [security : Take security updates during ansible runs] ********************
skipping: [localhost] => (item=unattended-upgrade) 
skipping: [localhost] => (item=unattended-upgrade --dry-run) 

TASK [security : Install security packages] ************************************
skipping: [localhost] => (item=[]) 

TASK [security : Enable automatic start for update service] ********************
skipping: [localhost]

TASK [security : Update all system packages] ***********************************
skipping: [localhost]

TASK [security : Configure security auto-updates] ******************************
skipping: [localhost] => (item={u'regexp': u'^apply_updates', u'line': u'apply_updates = yes'}) 
skipping: [localhost] => (item={u'regexp': u'^update_cmd', u'line': u'update_cmd = security'}) 

TASK [security : Take security updates during ansible runs] ********************
skipping: [localhost] => (item=yum check-update --security) 
skipping: [localhost] => (item=yum update --security -y) 

TASK [mysql : Look for mysql 5.6] **********************************************
fatal: [localhost]: FAILED! => {"changed": false, "cmd": "dpkg -s mysql-server", "delta": "0:00:00.029991", "end": "2019-05-29 23:34:23.595613", "failed": true, "rc": 1, "start": "2019-05-29 23:34:23.565622", "stderr": "dpkg-query: package 'mysql-server' is not installed and no information is available\nUse dpkg --info (= dpkg-deb --info) to examine archive files,\nand dpkg --contents (= dpkg-deb --contents) to list their contents.", "stderr_lines": ["dpkg-query: package 'mysql-server' is not installed and no information is available", "Use dpkg --info (= dpkg-deb --info) to examine archive files,", "and dpkg --contents (= dpkg-deb --contents) to list their contents."], "stdout": "", "stdout_lines": []}
...ignoring

TASK [mysql : Important message] ***********************************************
skipping: [localhost]

TASK [mysql : pause] ***********************************************************
skipping: [localhost]

TASK [mysql : Stop mysql service] **********************************************
skipping: [localhost]

TASK [mysql : Remove experimental apt repository] ******************************
skipping: [localhost]

TASK [mysql : Remove experimental version of mysql] ****************************
skipping: [localhost] => (item=[]) 

TASK [mysql : Install mysql-5.6 and dependencies] ******************************
ok: [localhost] => (item=[u'mysql-server-5.6', u'python-mysqldb'])

TASK [mysql : Set default character sets and collations] ***********************
ok: [localhost]

TASK [mysql : restart mysql] ***************************************************
changed: [localhost]

TASK [mysql : Ensure Anonymous user(s) does not exist] *************************
ok: [localhost] => (item=localhost)
ok: [localhost] => (item=soumyakant-VirtualBox)

TASK [edxlocal : Install packages needed for single server] ********************
ok: [localhost] => (item=[u'postfix', u'libjpeg-dev'])

TASK [edxlocal : create databases] *********************************************
ok: [localhost] => (item=ecommerce)
ok: [localhost] => (item=dashboard)
ok: [localhost] => (item=xqueue)
ok: [localhost] => (item=edxapp)
skipping: [localhost] => (item=) 
ok: [localhost] => (item=edxapp_csmh)
ok: [localhost] => (item=analytics-api)
ok: [localhost] => (item=reports)
skipping: [localhost] => (item=) 
ok: [localhost] => (item=discovery)
skipping: [localhost] => (item=) 
skipping: [localhost] => (item=) 

TASK [edxlocal : create database users] ****************************************
ok: [localhost] => (item={u'db': u'ecommerce', u'user': u'ecomm001', u'pass': u'BEGwRPvKFMMicvFKxwIe8E9TIXcMZLV7LLi'})
ok: [localhost] => (item={u'db': u'dashboard', u'user': u'rosencrantz', u'pass': u'GXWm1EsyTdTfUycKLWIlZOuYNX7GSnyD1Bi'})
ok: [localhost] => (item={u'db': u'xqueue', u'user': u'xqueue001', u'pass': u'RIOVXm1D0ky1DQzyCs8tSKcMzdu1CbfdXq8'})
ok: [localhost] => (item={u'db': u'edxapp', u'user': u'edxapp001', u'pass': u'jzt9lXYK1sIhh8lslnqDMTFoQdeRroqR085'})
ok: [localhost] => (item={u'db': u'edxapp_csmh', u'user': u'edxapp_cmsh001', u'pass': u'Yc9Oks9jOzTmZ1i1SGa1AkkBvIP2xXbAELE'})
skipping: [localhost] => (item={u'db': u'', u'user': u'', u'pass': u'hMJ225fC0HwnTrLFPbdcSptW7oyRXgfjc5L'}) 
skipping: [localhost] => (item={u'db': u'', u'user': u'', u'pass': u'QWAJ33Y8mls0cuoPIxDBuIVDAVdE56UFHgw'}) 
skipping: [localhost] => (item={u'db': u'', u'user': u'', u'pass': u'GVQ0RVk46u98DaVMMRJtpHxu3V7uJMkryNO'}) 
ok: [localhost] => (item={u'db': u'discovery', u'user': u'discov001', u'pass': u'tnNpkYC5qeekdecMRf8sNC5T09PwzVB5ODN'})
skipping: [localhost] => (item={u'db': u'', u'user': u'journ001', u'pass': u'password'}) 
skipping: [localhost] => (item={u'db': u'', u'user': u'', u'pass': u''}) 

TASK [edxlocal : setup the migration db user] **********************************
ok: [localhost] => (item=ecommerce)
ok: [localhost] => (item=dashboard)
ok: [localhost] => (item=xqueue)
ok: [localhost] => (item=edxapp)
skipping: [localhost] => (item=) 
ok: [localhost] => (item=edxapp_csmh)
ok: [localhost] => (item=analytics-api)
skipping: [localhost] => (item=) 
ok: [localhost] => (item=reports)
ok: [localhost] => (item=discovery)
skipping: [localhost] => (item=) 
skipping: [localhost] => (item=) 

TASK [edxlocal : create api user for the analytics api] ************************
ok: [localhost]

TASK [edxlocal : create read-only reports user for the analytics-api] **********
ok: [localhost]

TASK [edxlocal : create a database for the hive metastore] *********************
skipping: [localhost]

TASK [edxlocal : setup the edx-notes-api db user] ******************************
skipping: [localhost]

TASK [edxlocal : setup the read-only db user] **********************************
ok: [localhost]

TASK [edxlocal : setup the admin db user] **************************************
ok: [localhost]

TASK [memcache : Install memcached] ********************************************
ok: [localhost]

TASK [security : Install security packages] ************************************
skipping: [localhost] => (item=[]) 

TASK [security : Update all system packages] ***********************************
skipping: [localhost]

TASK [security : Configure periodic unattended-upgrades] ***********************
skipping: [localhost]

TASK [security : Disable unattended-upgrades if Xenial (16.04)] ****************
skipping: [localhost] => (item=systemctl disable apt-daily-upgrade.timer) 
skipping: [localhost] => (item=systemctl disable apt-daily.timer) 
skipping: [localhost] => (item=systemctl disable apt-daily.service) 

TASK [security : Disable unattended-upgrades] **********************************
skipping: [localhost]

TASK [security : Only unattended-upgrade from security repo] *******************
skipping: [localhost]

TASK [security : Disable security only updates on unattended-upgrades] *********
skipping: [localhost]

TASK [security : Take security updates during ansible runs] ********************
skipping: [localhost] => (item=unattended-upgrade) 
skipping: [localhost] => (item=unattended-upgrade --dry-run) 

TASK [security : Install security packages] ************************************
skipping: [localhost] => (item=[]) 

TASK [security : Enable automatic start for update service] ********************
skipping: [localhost]

TASK [security : Update all system packages] ***********************************
skipping: [localhost]

TASK [security : Configure security auto-updates] ******************************
skipping: [localhost] => (item={u'regexp': u'^apply_updates', u'line': u'apply_updates = yes'}) 
skipping: [localhost] => (item={u'regexp': u'^update_cmd', u'line': u'update_cmd = security'}) 

TASK [security : Take security updates during ansible runs] ********************
skipping: [localhost] => (item=yum update --security -y) 
skipping: [localhost] => (item=yum check-update --security) 

TASK [mount_ebs : Unmount disk if fstype is wrong] *****************************

TASK [mount_ebs : Check that we don't want to unmount disks to change fstype when UNMOUNT_DISKS is false] ***
skipping: [localhost] => (item={u'uuid': u'2019-05-13-13-58-35-65', u'size_total': 86562816, u'mount': u'/media/soumyakant/VBox_GAs_6.0.8', u'size_available': 0, u'fstype': u'iso9660', u'device': u'/dev/sr0', u'options': u'ro,nosuid,nodev,relatime,nojoliet,check=s,map=n,blocksize=2048,uid=1000,gid=1000,dmode=500,fmode=400'}) 
skipping: [localhost] => (item={u'uuid': u'f22b2f5b-3af0-4ddb-925f-e74af35468b0', u'size_total': 52485033984, u'mount': u'/', u'size_available': 32633548800, u'fstype': u'ext4', u'device': u'/dev/sda1', u'options': u'rw,relatime,errors=remount-ro,data=ordered'}) 

TASK [mount_ebs : Create filesystem] *******************************************

TASK [mount_ebs : Unmount disks mounted to the wrong place] ********************
skipping: [localhost] => (item={u'uuid': u'f22b2f5b-3af0-4ddb-925f-e74af35468b0', u'size_total': 52485033984, u'mount': u'/', u'size_available': 32633548800, u'fstype': u'ext4', u'device': u'/dev/sda1', u'options': u'rw,relatime,errors=remount-ro,data=ordered'}) 
skipping: [localhost] => (item={u'uuid': u'2019-05-13-13-58-35-65', u'size_total': 86562816, u'mount': u'/media/soumyakant/VBox_GAs_6.0.8', u'size_available': 0, u'fstype': u'iso9660', u'device': u'/dev/sr0', u'options': u'ro,nosuid,nodev,relatime,nojoliet,check=s,map=n,blocksize=2048,uid=1000,gid=1000,dmode=500,fmode=400'}) 

TASK [mount_ebs : Check that we don't want to unmount disks to change mountpoint when UNMOUNT_DISKS is false] ***
skipping: [localhost] => (item={u'uuid': u'f22b2f5b-3af0-4ddb-925f-e74af35468b0', u'size_total': 52485033984, u'mount': u'/', u'size_available': 32633548800, u'fstype': u'ext4', u'device': u'/dev/sda1', u'options': u'rw,relatime,errors=remount-ro,data=ordered'}) 
skipping: [localhost] => (item={u'uuid': u'2019-05-13-13-58-35-65', u'size_total': 86562816, u'mount': u'/media/soumyakant/VBox_GAs_6.0.8', u'size_available': 0, u'fstype': u'iso9660', u'device': u'/dev/sr0', u'options': u'ro,nosuid,nodev,relatime,nojoliet,check=s,map=n,blocksize=2048,uid=1000,gid=1000,dmode=500,fmode=400'}) 

TASK [mount_ebs : Mount disks] *************************************************

TASK [mongo_3_2 : Add disable transparent huge pages systemd service (http://docs.mongodb.org/manual/tutorial/transparent-huge-pages/)] ***
ok: [localhost]

TASK [mongo_3_2 : Enable/start disable transparent huge pages service (http://docs.mongodb.org/manual/tutorial/transparent-huge-pages/)] ***
changed: [localhost]

TASK [mongo_3_2 : install python pymongo for mongo_user ansible module] ********
ok: [localhost]

TASK [mongo_3_2 : add the mongodb signing key] *********************************
ok: [localhost]

TASK [mongo_3_2 : add the mongodb repo to the sources list] ********************
ok: [localhost]

TASK [mongo_3_2 : install mongo server and recommends] *************************
changed: [localhost] => (item=[u'mongodb-org=3.2.16', u'mongodb-org-server=3.2.16', u'mongodb-org-shell=3.2.16', u'mongodb-org-mongos=3.2.16', u'mongodb-org-tools=3.2.16'])

TASK [mongo_3_2 : create mongo dirs] *******************************************
ok: [localhost] => (item=/edx/var/mongo)
ok: [localhost] => (item=/edx/var/mongo/mongodb)
ok: [localhost] => (item=/edx/var/log/mongo)
ok: [localhost] => (item=/edx/var/mongo/mongodb/journal)

TASK [mongo_3_2 : add serverStatus logging script] *****************************
ok: [localhost]

TASK [mongo_3_2 : add serverStatus logging script to cron] *********************
ok: [localhost]

TASK [mongo_3_2 : determine if there is a replica set already] *****************
 [WARNING]: Module did not set no_log for password
ok: [localhost]

TASK [mongo_3_2 : Try checking the replica set with no user/pass in case this is a new box] ***
skipping: [localhost]

TASK [mongo_3_2 : set facts that default to not initializing a replica set] ****
ok: [localhost]

TASK [mongo_3_2 : track if you have a replica set] *****************************
skipping: [localhost]

TASK [mongo_3_2 : warn about unconfigured replica sets] ************************
skipping: [localhost]

TASK [mongo_3_2 : copy mongodb key file] ***************************************
ok: [localhost]

TASK [mongo_3_2 : copy configuration template] *********************************
ok: [localhost]

TASK [mongo_3_2 : install logrotate configuration] *****************************
ok: [localhost]

TASK [mongo_3_2 : restart mongo service if we changed our configuration] *******
skipping: [localhost]

TASK [mongo_3_2 : wait for mongo server to start] ******************************
ok: [localhost]

TASK [mongo_3_2 : create super user] *******************************************
skipping: [localhost]

TASK [mongo_3_2 : Unset our skip initializing replica set fact so that mongod.conf gets a replica set] ***
skipping: [localhost]

TASK [mongo_3_2 : re-copy configuration template with replica set enabled] *****
skipping: [localhost]

TASK [mongo_3_2 : restart mongo service] ***************************************
skipping: [localhost]

TASK [mongo_3_2 : wait for mongo server to start] ******************************
skipping: [localhost]

TASK [mongo_3_2 : configure replica set] ***************************************
changed: [localhost]

TASK [mongo_3_2 : Wait for the replica set to update and (if needed) elect a primary] ***
ok: [localhost]

TASK [mongo_3_2 : create mongodb users in a replica set] ***********************
changed: [localhost] => (item={u'password': u'zMgytDzkuHKruLtDwABdXdXQPUz1jahgVcH', u'user': u'cs_comments_service', u'roles': u'readWrite', u'database': u'cs_comments_service'})
changed: [localhost] => (item={u'password': u'aw7f80rfmX1e8sxaSK6HiCclsqaT5tsOFlK', u'user': u'edxapp', u'roles': u'readWrite', u'database': u'edxapp'})

TASK [mongo_3_2 : ensure mongo starts at boot time] ****************************
ok: [localhost]

TASK [security : Install security packages] ************************************
skipping: [localhost] => (item=[]) 

TASK [security : Update all system packages] ***********************************
skipping: [localhost]

TASK [security : Configure periodic unattended-upgrades] ***********************
skipping: [localhost]

TASK [security : Disable unattended-upgrades if Xenial (16.04)] ****************
skipping: [localhost] => (item=systemctl disable apt-daily-upgrade.timer) 
skipping: [localhost] => (item=systemctl disable apt-daily.timer) 
skipping: [localhost] => (item=systemctl disable apt-daily.service) 

TASK [security : Disable unattended-upgrades] **********************************
skipping: [localhost]

TASK [security : Only unattended-upgrade from security repo] *******************
skipping: [localhost]

TASK [security : Disable security only updates on unattended-upgrades] *********
skipping: [localhost]

TASK [security : Take security updates during ansible runs] ********************
skipping: [localhost] => (item=unattended-upgrade) 
skipping: [localhost] => (item=unattended-upgrade --dry-run) 

TASK [security : Install security packages] ************************************
skipping: [localhost] => (item=[]) 

TASK [security : Enable automatic start for update service] ********************
skipping: [localhost]

TASK [security : Update all system packages] ***********************************
skipping: [localhost]

TASK [security : Configure security auto-updates] ******************************
skipping: [localhost] => (item={u'regexp': u'^apply_updates', u'line': u'apply_updates = yes'}) 
skipping: [localhost] => (item={u'regexp': u'^update_cmd', u'line': u'update_cmd = security'}) 

TASK [security : Take security updates during ansible runs] ********************
skipping: [localhost] => (item=yum update --security -y) 
skipping: [localhost] => (item=yum check-update --security) 

TASK [rabbitmq : install packages needed by rabbit] ****************************
ok: [localhost] => (item=[u'apt-transport-https'])

TASK [rabbitmq : trust rabbit's packagecloud repository] ***********************
ok: [localhost]

TASK [rabbitmq : add rabbit's packagecloud repository] *************************
ok: [localhost]

TASK [rabbitmq : Check if rabbit is installed] *********************************
changed: [localhost]

TASK [rabbitmq : Warn if wrong rabbit version is installed] ********************
skipping: [localhost]

TASK [rabbitmq : Install rabbit package] ***************************************
skipping: [localhost]

TASK [rabbitmq : Stop rabbit cluster] ******************************************
changed: [localhost]

TASK [rabbitmq : Send sigterm to any running rabbitmq processes] ***************
changed: [localhost]

TASK [rabbitmq : Create rabbitmq edx directories] ******************************
ok: [localhost] => (item=/edx/app/rabbitmq)
ok: [localhost] => (item=/edx/var/log/rabbitmq)

TASK [rabbitmq : Add queue monitoring script] **********************************
ok: [localhost]

TASK [rabbitmq : Add RabbitMQ memory usage script] *****************************
ok: [localhost]

TASK [rabbitmq : Set up a cron job to run queue script] ************************
ok: [localhost]

TASK [rabbitmq : Set up a cron job to run the script] **************************
ok: [localhost]

TASK [rabbitmq : install logrotate configuration] ******************************
ok: [localhost]

TASK [rabbitmq : Create cookie directory] **************************************
ok: [localhost]

TASK [rabbitmq : Add rabbitmq erlang cookie] ***********************************
ok: [localhost]

TASK [rabbitmq : Create rabbitmq config directory] *****************************
ok: [localhost]

TASK [rabbitmq : Add rabbitmq environment configuration] ***********************
ok: [localhost]

TASK [rabbitmq : Add rabbitmq cluster configuration] ***************************
ok: [localhost]

TASK [rabbitmq : Install plugins] **********************************************
ok: [localhost] => (item=rabbitmq_management)

TASK [rabbitmq : Remove mnesia configuration] **********************************
skipping: [localhost]

TASK [rabbitmq : Start rabbit nodes] *******************************************
changed: [localhost]

TASK [rabbitmq : Wait for rabbit to start] *************************************
ok: [localhost]

TASK [rabbitmq : Remove guest user] ********************************************
ok: [localhost]

TASK [rabbitmq : Add vhosts] ***************************************************
ok: [localhost] => (item=/)

TASK [rabbitmq : set_fact] *****************************************************
ok: [localhost] => (item=/)

TASK [rabbitmq : Add admin users] **********************************************
ok: [localhost] => (item={u'password': u'58F5FV0HqcZMCb8UyegUTTzqk1i9G42f9X0', u'name': u'admin'})
ok: [localhost] => (item={u'password': u'kZoM1yAQb74KvkTC0gBek7QmZzZIcFb4Ww4', u'name': u'edx'})
ok: [localhost] => (item={u'password': u'inArGUeQtVOLQi5YeXpLh6oNtlW05wMefXH', u'name': u'celery'})

TASK [rabbitmq : Make queues mirrored] *****************************************
skipping: [localhost] => (item=/) 

TASK [rabbitmq : Install admin tools] ******************************************
ok: [localhost]

TASK [rabbitmq : Ensure rabbitmqadmin attributes] ******************************
ok: [localhost]

TASK [rabbitmq : Set cluster name] *********************************************
changed: [localhost]

TASK [security : Install security packages] ************************************
skipping: [localhost] => (item=[]) 

TASK [security : Update all system packages] ***********************************
skipping: [localhost]

TASK [security : Configure periodic unattended-upgrades] ***********************
skipping: [localhost]

TASK [security : Disable unattended-upgrades if Xenial (16.04)] ****************
skipping: [localhost] => (item=systemctl disable apt-daily-upgrade.timer) 
skipping: [localhost] => (item=systemctl disable apt-daily.timer) 
skipping: [localhost] => (item=systemctl disable apt-daily.service) 

TASK [security : Disable unattended-upgrades] **********************************
skipping: [localhost]

TASK [security : Only unattended-upgrade from security repo] *******************
skipping: [localhost]

TASK [security : Disable security only updates on unattended-upgrades] *********
skipping: [localhost]

TASK [security : Take security updates during ansible runs] ********************
skipping: [localhost] => (item=unattended-upgrade) 
skipping: [localhost] => (item=unattended-upgrade --dry-run) 

TASK [security : Install security packages] ************************************
skipping: [localhost] => (item=[]) 

TASK [security : Enable automatic start for update service] ********************
skipping: [localhost]

TASK [security : Update all system packages] ***********************************
skipping: [localhost]

TASK [security : Configure security auto-updates] ******************************
skipping: [localhost] => (item={u'regexp': u'^apply_updates', u'line': u'apply_updates = yes'}) 
skipping: [localhost] => (item={u'regexp': u'^update_cmd', u'line': u'update_cmd = security'}) 

TASK [security : Take security updates during ansible runs] ********************
skipping: [localhost] => (item=yum update --security -y) 
skipping: [localhost] => (item=yum check-update --security) 

TASK [security : Install security packages] ************************************
skipping: [localhost] => (item=[]) 

TASK [security : Update all system packages] ***********************************
skipping: [localhost]

TASK [security : Configure periodic unattended-upgrades] ***********************
skipping: [localhost]

TASK [security : Disable unattended-upgrades if Xenial (16.04)] ****************
skipping: [localhost] => (item=systemctl disable apt-daily-upgrade.timer) 
skipping: [localhost] => (item=systemctl disable apt-daily.timer) 
skipping: [localhost] => (item=systemctl disable apt-daily.service) 

TASK [security : Disable unattended-upgrades] **********************************
skipping: [localhost]

TASK [security : Only unattended-upgrade from security repo] *******************
skipping: [localhost]

TASK [security : Disable security only updates on unattended-upgrades] *********
skipping: [localhost]

TASK [security : Take security updates during ansible runs] ********************
skipping: [localhost] => (item=unattended-upgrade) 
skipping: [localhost] => (item=unattended-upgrade --dry-run) 

TASK [security : Install security packages] ************************************
skipping: [localhost] => (item=[]) 

TASK [security : Enable automatic start for update service] ********************
skipping: [localhost]

TASK [security : Update all system packages] ***********************************
skipping: [localhost]

TASK [security : Configure security auto-updates] ******************************
skipping: [localhost] => (item={u'regexp': u'^apply_updates', u'line': u'apply_updates = yes'}) 
skipping: [localhost] => (item={u'regexp': u'^update_cmd', u'line': u'update_cmd = security'}) 

TASK [security : Take security updates during ansible runs] ********************
skipping: [localhost] => (item=yum update --security -y) 
skipping: [localhost] => (item=yum check-update --security) 

TASK [supervisor : Create application and supervisor service user] *************
ok: [localhost] => (item=supervisor)
ok: [localhost] => (item=www-data)

TASK [supervisor : Create supervisor and service user accessible directories] ***
ok: [localhost] => (item=/edx/app/supervisor)
ok: [localhost] => (item=/edx/app/supervisor/venvs/supervisor)
ok: [localhost] => (item=/edx/app/supervisor/conf.d)
ok: [localhost] => (item=/edx/app/supervisor/conf.available.d)

TASK [supervisor : Create supervisor directories] ******************************
ok: [localhost] => (item=/edx/var/supervisor)
ok: [localhost] => (item=/edx/var/log/supervisor)

TASK [supervisor : Install supervisor in its venv] *****************************
ok: [localhost]

TASK [supervisor : Install supervisor in its venv] *****************************
ok: [localhost] => (item=boto=="2.48.0")
ok: [localhost] => (item=python-simple-hipchat)

TASK [supervisor : Create supervisor upstart job] ******************************
skipping: [localhost]

TASK [supervisor : Create supervisor systemd job] ******************************
ok: [localhost]

TASK [supervisor : Write the pre_suprevisor python script] *********************
skipping: [localhost]

TASK [supervisor : Create supervisor master config] ****************************
ok: [localhost]

TASK [supervisor : Remove a symlink for supervisortctl] ************************
changed: [localhost]

TASK [supervisor : Remove symlink for supervisor cfg] **************************
ok: [localhost] => (item=/edx/app/supervisor/supervisord.conf)
ok: [localhost] => (item=/edx/app/supervisor/conf.d)

TASK [supervisor : Create helper script for running supervisor] ****************
changed: [localhost]

TASK [supervisor : Are we in a Docker container] *******************************
changed: [localhost]

TASK [supervisor : Enable supervisor to start on boot] *************************
ok: [localhost]

TASK [supervisor : Start supervisor] *******************************************
ok: [localhost]

TASK [supervisor : Wait for web port to be available] **************************
skipping: [localhost]

TASK [supervisor : Update supervisor configuration] ****************************
ok: [localhost]

TASK [edxapp_common : Install system packages] *********************************
ok: [localhost] => (item=[u'build-essential', u'gfortran', u'graphviz', u'graphviz-dev', u'liblapack-dev', u'libmysqlclient-dev', u'libxml2-dev', u'libgeos-dev', u'libxslt1-dev', u'gettext', u'libjpeg8-dev', u'libpng12-dev', u'libxmlsec1-dev', u'swig'])

TASK [nltk : Install unzip] ****************************************************
ok: [localhost]

TASK [nltk : create the nltk data directory and subdirectories] ****************
ok: [localhost] => (item={u'url': u'http://nltk.github.io/nltk_data/packages/taggers/maxent_treebank_pos_tagger.zip', u'path': u'taggers/maxent_treebank_pos_tagger'})
ok: [localhost] => (item={u'url': u'http://nltk.github.io/nltk_data/packages/corpora/stopwords.zip', u'path': u'corpora/stopwords'})
ok: [localhost] => (item={u'url': u'http://nltk.github.io/nltk_data/packages/corpora/wordnet.zip', u'path': u'corpora/wordnet'})

TASK [nltk : download nltk data] ***********************************************
ok: [localhost] => (item={u'url': u'http://nltk.github.io/nltk_data/packages/taggers/maxent_treebank_pos_tagger.zip', u'path': u'taggers/maxent_treebank_pos_tagger'})
ok: [localhost] => (item={u'url': u'http://nltk.github.io/nltk_data/packages/corpora/stopwords.zip', u'path': u'corpora/stopwords'})
ok: [localhost] => (item={u'url': u'http://nltk.github.io/nltk_data/packages/corpora/wordnet.zip', u'path': u'corpora/wordnet'})

TASK [nltk : unarchive nltk data] **********************************************
skipping: [localhost] => (item={u'url': u'http://nltk.github.io/nltk_data/packages/corpora/wordnet.zip', u'path': u'corpora/wordnet'}) 
skipping: [localhost] => (item={u'url': u'http://nltk.github.io/nltk_data/packages/corpora/stopwords.zip', u'path': u'corpora/stopwords'}) 
skipping: [localhost] => (item={u'url': u'http://nltk.github.io/nltk_data/packages/taggers/maxent_treebank_pos_tagger.zip', u'path': u'taggers/maxent_treebank_pos_tagger'}) 

TASK [add_user : create user groups] *******************************************
skipping: [localhost] => (item=edx-themes) 

TASK [add_user : create application user] **************************************
skipping: [localhost]

TASK [add_user : ensure correct ownership of home directory] *******************
skipping: [localhost]

TASK [add_user : create dirs for the user] *************************************

TASK [git_clone : Set git fetch.prune to ignore deleted remote refs] ***********
skipping: [localhost]

TASK [git_clone : Validate git protocol] ***************************************
skipping: [localhost] => (item=(censored due to no_log)) 

TASK [git_clone : Install read-only ssh key] ***********************************
skipping: [localhost] => (item=(censored due to no_log)) 

TASK [git_clone : Check that working tree is clean] ****************************
skipping: [localhost] => (item=/edx/var/edx-themes/edx-themes) 

TASK [git_clone : Require a clean working tree] ********************************
skipping: [localhost] => (item={'skipped': True, '_ansible_no_log': False, 'skip_reason': u'Conditional result was False', '_ansible_item_result': True, 'item': u'/edx/var/edx-themes/edx-themes', 'changed': False}) 

TASK [git_clone : Checkout code over ssh] **************************************
skipping: [localhost] => (item=(censored due to no_log)) 

TASK [git_clone : Checkout code over https] ************************************
skipping: [localhost] => (item=(censored due to no_log)) 

TASK [git_clone : Remove read-only ssh key] ************************************
skipping: [localhost] => (item=(censored due to no_log)) 

TASK [git_clone : Run git clean after checking out code] ***********************
skipping: [localhost] => (item=(censored due to no_log)) 

TASK [edx_themes : ensure edx-theme's group has read/write access to themes directory] ***
skipping: [localhost]

TASK [edx_themes : Add theme users to theme's group so that that have read/write access to themes directories] ***
skipping: [localhost] => (item=edxapp) 

TASK [edx_themes : update .bashrc to set umask value] **************************
skipping: [localhost]

TASK [edxapp : create application user] ****************************************
ok: [localhost]

TASK [edxapp : create edxapp user dirs] ****************************************
ok: [localhost] => (item={u'path': u'/edx/app/edxapp'})
ok: [localhost] => (item={u'path': u'/edx/app/edxapp/.ssh'})
ok: [localhost] => (item={u'path': u'/edx/app/edxapp/venvs'})
ok: [localhost] => (item={u'path': u'/edx/var/edxapp/themes'})
ok: [localhost] => (item={u'path': u'/edx/var/edxapp/staticfiles'})
ok: [localhost] => (item={u'path': u'/edx/var/edxapp/course_static'})
changed: [localhost] => (item={u'path': u'/edx/var/edxapp/data'})
ok: [localhost] => (item={u'path': u'/edx/var/edxapp', u'mode': u'0775'})
ok: [localhost] => (item={u'path': u'/edx/var/edxapp/course_repos', u'mode': u'0775'})

TASK [edxapp : write devstack script] ******************************************
skipping: [localhost]

TASK [edxapp : create edxapp log dir] ******************************************
ok: [localhost]

TASK [edxapp : Ensure the tracking folder exists] ******************************
ok: [localhost]

TASK [edxapp : Ensure the tracking.log file exists] ****************************
changed: [localhost]

TASK [edxapp : create web-writable edxapp data dirs] ***************************
changed: [localhost] => (item=/edx/var/edxapp/data)
ok: [localhost] => (item=/edx/var/edxapp/uploads)
ok: [localhost] => (item=/edx/var/edxapp/media)

TASK [edxapp : install system packages on which LMS and CMS rely] **************
ok: [localhost] => (item=[u's3cmd', u'pkg-config', u'g++', u'apparmor-utils', u'curl', u'ipython', u'nodejs', u'ntp', u'libfreetype6-dev', u'libffi-dev', u'python-dev', u'libsqlite3-dev'])

TASK [edxapp : set up edxapp .npmrc] *******************************************
changed: [localhost]

TASK [edxapp : create log directories for service variants] ********************
ok: [localhost] => (item=lms)
ok: [localhost] => (item=cms)

TASK [edxapp : code sandbox | Check which `libblas` to use] ********************
ok: [localhost]

TASK [edxapp : code sandbox | Use libblas.so.3gf in Ubuntu] ********************
skipping: [localhost]

TASK [edxapp : code sandbox | Use libblas.so.3 in Ubuntu] **********************
ok: [localhost]

TASK [edxapp : code sandbox | Check which `liblapac` to use] *******************
ok: [localhost]

TASK [edxapp : code sandbox | Use liblapack.so.3gf in Ubuntu] ******************
skipping: [localhost]

TASK [edxapp : code sandbox | Use liblapack.so.3 in Ubuntu] ********************
ok: [localhost]

TASK [edxapp : code sandbox | Create edxapp sandbox user] **********************
ok: [localhost]

TASK [edxapp : code sandbox | Install apparmor utils system pkg] ***************
ok: [localhost]

TASK [edxapp : code sandbox | write out apparmor code sandbox config] **********
ok: [localhost]

TASK [edxapp : code sandbox | write out sandbox user sudoers config] ***********
ok: [localhost]

TASK [edxapp : code sandbox | start apparmor service] **************************
ok: [localhost]

TASK [edxapp : code sandbox | (bootstrap) load code sandbox profile] ***********
changed: [localhost]

TASK [edxapp : code sandbox | (bootstrap) put code sandbox into aa-enforce or aa-complain mode depending on EDXAPP_SANDBOX_ENFORCE] ***
changed: [localhost]

TASK [edxapp : copy the template to the desired location] **********************
ok: [localhost] => (item={u'dest': u'/edx/app/edxapp/edxapp_env', u'src': u'edxapp_env.j2', u'group': u'www-data', u'mode': u'0644', u'owner': u'edxapp'})
ok: [localhost] => (item={u'dest': u'/edx/app/edxapp/newrelic.ini', u'src': u'newrelic.ini.j2', u'group': u'www-data', u'mode': u'0644', u'owner': u'edxapp'})
ok: [localhost] => (item={u'dest': u'/tmp/edxapp_git_ssh.sh', u'src': u'git_ssh.sh.j2', u'group': u'edxapp', u'mode': u'0750', u'owner': u'edxapp'})
ok: [localhost] => (item={u'dest': u'/edx/app/edxapp/.boto', u'src': u'boto.j2', u'group': u'www-data', u'mode': u'0644', u'owner': u'edxapp'})

TASK [edxapp : install read-only ssh key] **************************************
skipping: [localhost]

TASK [edxapp : set git fetch.prune to ignore deleted remote refs] **************
changed: [localhost]

TASK [edxapp : checkout edx-platform repo into /edx/app/edxapp/edx-platform] ***
ok: [localhost]

TASK [edxapp : git clean after checking out edx-platform] **********************
changed: [localhost]

TASK [edxapp : checkout Stanford-style theme] **********************************
skipping: [localhost]

TASK [simple_theme : assert] ***************************************************
skipping: [localhost]

TASK [simple_theme : assert] ***************************************************
skipping: [localhost]

TASK [simple_theme : Check whether theme directory already exists] *************
skipping: [localhost]

TASK [simple_theme : Download skeleton theme] **********************************
skipping: [localhost]

TASK [simple_theme : Adjust owner/group of downloaded skeleton theme] **********
skipping: [localhost]

TASK [simple_theme : Create default skeleton (dirs)] ***************************
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'lms/static', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/../files/default_skeleton', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'lms', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/../files/default_skeleton', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'lms/static/sass', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/../files/default_skeleton', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'lms/static/sass/discussion', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/../files/default_skeleton', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'src': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/../files/default_skeleton/lms/static/sass/lms-main-v2.scss', 'group': 'soumyakant', 'uid': 1000, 'state': 'file', 'gid': 1000, 'mode': '0664', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'lms/static/sass/lms-main-v2.scss', 'size': 65, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/../files/default_skeleton', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'src': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/../files/default_skeleton/lms/static/sass/lms-main-v1.scss', 'group': 'soumyakant', 'uid': 1000, 'state': 'file', 'gid': 1000, 'mode': '0664', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'lms/static/sass/lms-main-v1.scss', 'size': 65, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/../files/default_skeleton', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'src': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/../files/default_skeleton/lms/static/sass/lms-course.scss', 'group': 'soumyakant', 'uid': 1000, 'state': 'file', 'gid': 1000, 'mode': '0664', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'lms/static/sass/lms-course.scss', 'size': 63, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/../files/default_skeleton', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'src': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/../files/default_skeleton/lms/static/sass/discussion/lms-discussion-main.scss', 'group': 'soumyakant', 'uid': 1000, 'state': 'file', 'gid': 1000, 'mode': '0664', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'lms/static/sass/discussion/lms-discussion-main.scss', 'size': 86, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/../files/default_skeleton', 'ctime': 1559054298.677964}) 

TASK [simple_theme : Create default skeleton (files)] **************************
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'lms/static', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/../files/default_skeleton', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'lms', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/../files/default_skeleton', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'lms/static/sass', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/../files/default_skeleton', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'lms/static/sass/discussion', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/../files/default_skeleton', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'src': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/../files/default_skeleton/lms/static/sass/lms-main-v2.scss', 'group': 'soumyakant', 'uid': 1000, 'state': 'file', 'gid': 1000, 'mode': '0664', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'lms/static/sass/lms-main-v2.scss', 'size': 65, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/../files/default_skeleton', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'src': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/../files/default_skeleton/lms/static/sass/lms-main-v1.scss', 'group': 'soumyakant', 'uid': 1000, 'state': 'file', 'gid': 1000, 'mode': '0664', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'lms/static/sass/lms-main-v1.scss', 'size': 65, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/../files/default_skeleton', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'src': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/../files/default_skeleton/lms/static/sass/lms-course.scss', 'group': 'soumyakant', 'uid': 1000, 'state': 'file', 'gid': 1000, 'mode': '0664', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'lms/static/sass/lms-course.scss', 'size': 63, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/../files/default_skeleton', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'src': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/../files/default_skeleton/lms/static/sass/discussion/lms-discussion-main.scss', 'group': 'soumyakant', 'uid': 1000, 'state': 'file', 'gid': 1000, 'mode': '0664', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'lms/static/sass/discussion/lms-discussion-main.scss', 'size': 86, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/../files/default_skeleton', 'ctime': 1559054298.677964}) 

TASK [simple_theme : Create directory to hold the theme and styles] ************
skipping: [localhost] => (item=lms/static/sass/partials/lms/theme) 
skipping: [localhost] => (item=.) 

TASK [simple_theme : Compile the templates] ************************************
skipping: [localhost] => (item=lms/static/sass/partials/lms/theme/_variables-v1.scss) 
skipping: [localhost] => (item=lms/static/sass/_lms-overrides.scss) 

TASK [simple_theme : Create directories for static files to be copied] *********
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'example_static_dir', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'default_skeleton', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'default_skeleton/lms', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'default_skeleton/lms/static', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'default_skeleton/lms/static/sass', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'default_skeleton/lms/static/sass/discussion', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'src': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/default_skeleton/lms/static/sass/lms-main-v2.scss', 'group': 'soumyakant', 'uid': 1000, 'state': 'file', 'gid': 1000, 'mode': '0664', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'default_skeleton/lms/static/sass/lms-main-v2.scss', 'size': 65, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'src': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/default_skeleton/lms/static/sass/lms-main-v1.scss', 'group': 'soumyakant', 'uid': 1000, 'state': 'file', 'gid': 1000, 'mode': '0664', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'default_skeleton/lms/static/sass/lms-main-v1.scss', 'size': 65, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'src': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/default_skeleton/lms/static/sass/lms-course.scss', 'group': 'soumyakant', 'uid': 1000, 'state': 'file', 'gid': 1000, 'mode': '0664', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'default_skeleton/lms/static/sass/lms-course.scss', 'size': 63, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'src': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/default_skeleton/lms/static/sass/discussion/lms-discussion-main.scss', 'group': 'soumyakant', 'uid': 1000, 'state': 'file', 'gid': 1000, 'mode': '0664', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'default_skeleton/lms/static/sass/discussion/lms-discussion-main.scss', 'size': 86, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'example_static_dir/lms', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'example_static_dir/cms', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'example_static_dir/lms/images', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'example_static_dir/lms/js', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'src': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/example_static_dir/lms/images/favicon.ico', 'group': 'soumyakant', 'uid': 1000, 'state': 'file', 'gid': 1000, 'mode': '0664', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'example_static_dir/lms/images/favicon.ico', 'size': 34894, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'src': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/example_static_dir/lms/images/logo.png', 'group': 'soumyakant', 'uid': 1000, 'state': 'file', 'gid': 1000, 'mode': '0664', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'example_static_dir/lms/images/logo.png', 'size': 928, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'src': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/example_static_dir/lms/js/myscript.js', 'group': 'soumyakant', 'uid': 1000, 'state': 'file', 'gid': 1000, 'mode': '0664', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'example_static_dir/lms/js/myscript.js', 'size': 42, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'example_static_dir/cms/images', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'src': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/example_static_dir/cms/images/logo.png', 'group': 'soumyakant', 'uid': 1000, 'state': 'file', 'gid': 1000, 'mode': '0664', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'example_static_dir/cms/images/logo.png', 'size': 1494, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 

TASK [simple_theme : Copy static files (adding "static/")] *********************
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'example_static_dir', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'default_skeleton', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'default_skeleton/lms', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'default_skeleton/lms/static', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'default_skeleton/lms/static/sass', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'default_skeleton/lms/static/sass/discussion', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'src': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/default_skeleton/lms/static/sass/lms-main-v2.scss', 'group': 'soumyakant', 'uid': 1000, 'state': 'file', 'gid': 1000, 'mode': '0664', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'default_skeleton/lms/static/sass/lms-main-v2.scss', 'size': 65, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'src': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/default_skeleton/lms/static/sass/lms-main-v1.scss', 'group': 'soumyakant', 'uid': 1000, 'state': 'file', 'gid': 1000, 'mode': '0664', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'default_skeleton/lms/static/sass/lms-main-v1.scss', 'size': 65, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'src': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/default_skeleton/lms/static/sass/lms-course.scss', 'group': 'soumyakant', 'uid': 1000, 'state': 'file', 'gid': 1000, 'mode': '0664', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'default_skeleton/lms/static/sass/lms-course.scss', 'size': 63, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'src': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/default_skeleton/lms/static/sass/discussion/lms-discussion-main.scss', 'group': 'soumyakant', 'uid': 1000, 'state': 'file', 'gid': 1000, 'mode': '0664', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'default_skeleton/lms/static/sass/discussion/lms-discussion-main.scss', 'size': 86, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'example_static_dir/lms', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'example_static_dir/cms', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'example_static_dir/lms/images', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'example_static_dir/lms/js', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'src': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/example_static_dir/lms/images/favicon.ico', 'group': 'soumyakant', 'uid': 1000, 'state': 'file', 'gid': 1000, 'mode': '0664', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'example_static_dir/lms/images/favicon.ico', 'size': 34894, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'src': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/example_static_dir/lms/images/logo.png', 'group': 'soumyakant', 'uid': 1000, 'state': 'file', 'gid': 1000, 'mode': '0664', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'example_static_dir/lms/images/logo.png', 'size': 928, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'src': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/example_static_dir/lms/js/myscript.js', 'group': 'soumyakant', 'uid': 1000, 'state': 'file', 'gid': 1000, 'mode': '0664', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'example_static_dir/lms/js/myscript.js', 'size': 42, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'example_static_dir/cms/images', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'src': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/example_static_dir/cms/images/logo.png', 'group': 'soumyakant', 'uid': 1000, 'state': 'file', 'gid': 1000, 'mode': '0664', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'example_static_dir/cms/images/logo.png', 'size': 1494, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 

TASK [simple_theme : Create directories for static files to be downloaded] *****

TASK [simple_theme : Download static files to be included in theme] ************

TASK [edxapp : Stat each requirements file with Github URLs to ensure it exists] ***
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx/custom.txt)
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx/base.txt)
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx-sandbox/base.txt)

TASK [edxapp : Updating requirement files for git mirror] **********************
skipping: [localhost] => (item={'_ansible_parsed': True, u'stat': {u'exists': False}, '_ansible_item_result': True, '_ansible_no_log': False, u'changed': False, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx/custom.txt', u'invocation': {u'module_args': {u'checksum_algorithm': u'sha1', u'get_checksum': True, u'follow': False, u'path': u'/edx/app/edxapp/edx-platform/requirements/edx/custom.txt', u'get_md5': True, u'get_mime': True, u'get_attributes': True}}}) 
changed: [localhost] => (item={'_ansible_parsed': True, u'stat': {u'isuid': False, u'uid': 1003, u'exists': True, u'attr_flags': u'e', u'woth': False, u'isreg': True, u'device_type': 0, u'mtime': 1559070517.1897, u'block_size': 4096, u'inode': 1318382, u'isgid': False, u'size': 8266, u'executable': False, u'charset': u'us-ascii', u'readable': True, u'version': u'18446744073252550359', u'pw_name': u'edxapp', u'gid': 1004, u'ischr': False, u'wusr': True, u'writeable': True, u'mimetype': u'text/plain', u'blocks': 24, u'xoth': False, u'islnk': False, u'nlink': 1, u'issock': False, u'rgrp': True, u'gr_name': u'edxapp', u'path': u'/edx/app/edxapp/edx-platform/requirements/edx/base.txt', u'xusr': False, u'atime': 1559070519.287591, u'md5': u'b0c378521b9ee6a6d9081e3bfd6bba87', u'isdir': False, u'ctime': 1559070517.1897, u'isblk': False, u'wgrp': False, u'xgrp': False, u'dev': 2049, u'roth': True, u'isfifo': False, u'mode': u'0644', u'checksum': u'ffe1b0f986361695e6e7832157f6d9a85e00a93a', u'rusr': True, u'attributes': [u'extents']}, '_ansible_item_result': True, '_ansible_no_log': False, u'changed': False, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx/base.txt', u'invocation': {u'module_args': {u'checksum_algorithm': u'sha1', u'get_checksum': True, u'follow': False, u'path': u'/edx/app/edxapp/edx-platform/requirements/edx/base.txt', u'get_md5': True, u'get_mime': True, u'get_attributes': True}}})
changed: [localhost] => (item={'_ansible_parsed': True, u'stat': {u'isuid': False, u'uid': 1003, u'exists': True, u'attr_flags': u'e', u'woth': False, u'isreg': True, u'device_type': 0, u'mtime': 1559070517.3095794, u'block_size': 4096, u'inode': 1317926, u'isgid': False, u'size': 649, u'executable': False, u'charset': u'us-ascii', u'readable': True, u'version': u'1628782502', u'pw_name': u'edxapp', u'gid': 1004, u'ischr': False, u'wusr': True, u'writeable': True, u'mimetype': u'text/plain', u'blocks': 8, u'xoth': False, u'islnk': False, u'nlink': 1, u'issock': False, u'rgrp': True, u'gr_name': u'edxapp', u'path': u'/edx/app/edxapp/edx-platform/requirements/edx-sandbox/base.txt', u'xusr': False, u'atime': 1559070734.2395446, u'md5': u'01743aae5e1e34bf17819bb00e8a2cd8', u'isdir': False, u'ctime': 1559070517.3095794, u'isblk': False, u'wgrp': False, u'xgrp': False, u'dev': 2049, u'roth': True, u'isfifo': False, u'mode': u'0644', u'checksum': u'e42a6f92316bc52dc3880f2a87d412085f089785', u'rusr': True, u'attributes': [u'extents']}, '_ansible_item_result': True, '_ansible_no_log': False, u'changed': False, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx-sandbox/base.txt', u'invocation': {u'module_args': {u'checksum_algorithm': u'sha1', u'get_checksum': True, u'follow': False, u'path': u'/edx/app/edxapp/edx-platform/requirements/edx-sandbox/base.txt', u'get_md5': True, u'get_mime': True, u'get_attributes': True}}})

TASK [edxapp : Create the virtualenv to install the Python requirements] *******
ok: [localhost]

TASK [edxapp : Pin pip to a specific version.] *********************************
changed: [localhost]

TASK [edxapp : Stat each Python requirements file to ensure it exists] *********
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx/custom.txt)
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx/base.txt)

TASK [edxapp : install python requirements] ************************************
skipping: [localhost] => (item={'_ansible_parsed': True, u'stat': {u'exists': False}, '_ansible_item_result': True, '_ansible_no_log': False, u'changed': False, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx/custom.txt', u'invocation': {u'module_args': {u'checksum_algorithm': u'sha1', u'get_checksum': True, u'follow': False, u'path': u'/edx/app/edxapp/edx-platform/requirements/edx/custom.txt', u'get_md5': True, u'get_mime': True, u'get_attributes': True}}}) 
changed: [localhost] => (item={'_ansible_parsed': True, u'stat': {u'isuid': False, u'uid': 1003, u'exists': True, u'attr_flags': u'e', u'woth': False, u'isreg': True, u'device_type': 0, u'mtime': 1559153280.9254346, u'block_size': 4096, u'inode': 1317741, u'isgid': False, u'size': 8266, u'executable': False, u'charset': u'us-ascii', u'readable': True, u'version': u'1841440470', u'pw_name': u'edxapp', u'gid': 1004, u'ischr': False, u'wusr': True, u'writeable': True, u'mimetype': u'text/plain', u'blocks': 24, u'xoth': False, u'islnk': False, u'nlink': 1, u'issock': False, u'rgrp': True, u'gr_name': u'edxapp', u'path': u'/edx/app/edxapp/edx-platform/requirements/edx/base.txt', u'xusr': False, u'atime': 1559153280.9254346, u'md5': u'b0c378521b9ee6a6d9081e3bfd6bba87', u'isdir': False, u'ctime': 1559153280.9254346, u'isblk': False, u'wgrp': False, u'xgrp': False, u'dev': 2049, u'roth': True, u'isfifo': False, u'mode': u'0644', u'checksum': u'ffe1b0f986361695e6e7832157f6d9a85e00a93a', u'rusr': True, u'attributes': [u'extents']}, '_ansible_item_result': True, '_ansible_no_log': False, u'changed': False, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx/base.txt', u'invocation': {u'module_args': {u'checksum_algorithm': u'sha1', u'get_checksum': True, u'follow': False, u'path': u'/edx/app/edxapp/edx-platform/requirements/edx/base.txt', u'get_md5': True, u'get_mime': True, u'get_attributes': True}}})

TASK [edxapp : install python private requirements] ****************************
skipping: [localhost] => (item={u'extra_args': u'-e', u'name': u'git+https://github.com/edx/ConceptXBlock.git@2376fde9ebdd83684b78dde77ef96361c3bd1aa0#egg=concept-xblock'}) 
skipping: [localhost] => (item={u'extra_args': u'-e', u'name': u'git+https://github.com/schoolyourself/schoolyourself-xblock.git@5e4d37716e3e72640e832e961f7cc0d38d4ec47b#egg=schoolyourself-xblock'}) 
skipping: [localhost] => (item={u'extra_args': u'-e', u'name': u'git+https://github.com/OfficeDev/xblock-officemix.git@3f876b5f0267b017812620239533a29c7d562d24#egg=officemix'}) 
skipping: [localhost] => (item={u'extra_args': u'-e', u'name': u'git+https://github.com/oppia/xblock.git@9f6b95b7eb7dbabb96b77198a3202604f96adf65#egg=oppia-xblock'}) 
skipping: [localhost] => (item={u'name': u'xblock-problem-builder==3.1.3'}) 
skipping: [localhost] => (item={u'extra_args': u'-e', u'name': u'git+https://github.com/edx/AnimationXBlock.git@d2b551bb8f49a138088e10298576102164145b87#egg=animation-xblock'}) 
skipping: [localhost] => (item={u'extra_args': u'-e', u'name': u'git+https://github.com/edx/AudioXBlock.git@1fbf19cc21613aead62799469e1593adb037fdd9#egg=audio-xblock'}) 
skipping: [localhost] => (item={u'extra_args': u'-e', u'name': u'git+https://github.com/open-craft/xblock-activetable.git@e933d41bb86a8d50fb878787ca680165a092a6d5#egg=xblock-activetable'}) 
skipping: [localhost] => (item={u'extra_args': u'-e', u'name': u'git+https://github.com/open-craft/xblock-vectordraw.git@c57df9d98119fd2ca4cb31b9d16c27333cdc65ca#egg=xblock-vectordraw==0.2.1'}) 
skipping: [localhost] => (item={u'name': u'ubcpi-xblock==0.6.4'}) 

TASK [edxapp : install python extra requirements] ******************************

TASK [edxapp : install CAS attribute module] ***********************************
skipping: [localhost]

TASK [edxapp : install sandbox requirements into regular venv] *****************
skipping: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx-sandbox/base.txt) 

TASK [edxapp : create nodeenv] *************************************************
changed: [localhost]

TASK [edxapp : Set the npm registry] *******************************************
ok: [localhost]

TASK [edxapp : Set the npm registry permissions] *******************************
changed: [localhost]

TASK [edxapp : install node dependencies] **************************************
changed: [localhost]

TASK [edxapp : code sandbox | put sandbox apparmor profile in complain mode] ***
changed: [localhost]

TASK [edxapp : code sandbox | Install base sandbox requirements and create sandbox virtualenv] ***
ok: [localhost]

TASK [edxapp : code sandbox | put code sandbox into aa-enforce or aa-complain mode, depending on EDXAPP_SANDBOX_ENFORCE] ***
changed: [localhost]

TASK [edxapp : compiling all py files in the edx-platform repo] ****************
changed: [localhost]

TASK [edxapp : give other read permissions to the virtualenv] ******************
ok: [localhost]

TASK [edxapp : create service wrapper scripts - {{item}}] **********************
ok: [localhost] => (item=lms.sh)
ok: [localhost] => (item=cms.sh)
ok: [localhost] => (item=worker.sh)

TASK [edxapp : create application and auth config] *****************************
ok: [localhost] => (item=[u'lms', u'env'])
ok: [localhost] => (item=[u'lms', u'auth'])
ok: [localhost] => (item=[u'cms', u'env'])
ok: [localhost] => (item=[u'cms', u'auth'])

TASK [edxapp : combined lms auth env for yml] **********************************
ok: [localhost]

TASK [edxapp : render lms yml config] ******************************************
ok: [localhost] => (item=lms)
ok: [localhost] => (item=cms)

TASK [edxapp : combined cms auth env for yml] **********************************
ok: [localhost]

TASK [edxapp : render studio yml config] ***************************************
ok: [localhost] => (item=lms)
ok: [localhost] => (item=cms)

TASK [edxapp : writing {{ item }} supervisor script] ***************************
ok: [localhost] => (item=lms)
ok: [localhost] => (item=cms)

TASK [edxapp : writing celery supervisor scripts] ******************************
ok: [localhost] => (item=workers.conf)

TASK [edxapp : clean out old edxapp.conf] **************************************
ok: [localhost]

TASK [edxapp : add gunicorn configuration files] *******************************
ok: [localhost] => (item=lms)
ok: [localhost] => (item=cms)

TASK [edxapp : enable {{ item }} supervisor script] ****************************
skipping: [localhost] => (item=lms) 
skipping: [localhost] => (item=cms) 

TASK [edxapp : enable celery worker supervisor script] *************************
ok: [localhost]

TASK [edxapp : create helper scripts for managing edxapp] **********************
ok: [localhost] => (item=[u'edxapp-migrate', u'lms'])
ok: [localhost] => (item=[u'edxapp-migrate', u'cms'])
ok: [localhost] => (item=[u'edxapp-runserver', u'lms'])
ok: [localhost] => (item=[u'edxapp-runserver', u'cms'])
ok: [localhost] => (item=[u'edxapp-shell', u'lms'])
ok: [localhost] => (item=[u'edxapp-shell', u'cms'])

TASK [edxapp : create script to compile and update assets] *********************
ok: [localhost]

TASK [edxapp : migrate] ********************************************************
changed: [localhost] => (item=lms)
changed: [localhost] => (item=cms)

TASK [edxapp : Remove and recreate the staticfiles directory so nothing stale can exist] ***
skipping: [localhost] => (item=directory) 
skipping: [localhost] => (item=absent) 

TASK [edxapp : gather static assets with paver] ********************************
skipping: [localhost]

TASK [edxapp : update supervisor configuration] ********************************
ok: [localhost]

TASK [edxapp : ensure edxapp has started] **************************************
skipping: [localhost] => (item=cms) 
skipping: [localhost] => (item=lms) 

TASK [edxapp : ensure edxapp_workers has started] ******************************
ok: [localhost]

TASK [edxapp : create symlinks from the venv bin dir and repo dir] *************
ok: [localhost] => (item=/edx/app/edxapp/venvs/edxapp/bin/python)
ok: [localhost] => (item=/edx/app/edxapp/venvs/edxapp/bin/pip)
ok: [localhost] => (item=/edx/app/edxapp/venvs/edxapp/bin/django-admin.py)
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/manage.py)

TASK [edxapp : remove read-only ssh key] ***************************************
skipping: [localhost]

TASK [edxapp : get instance information] ***************************************
skipping: [localhost]

TASK [edxapp : tag instance with edx_platform version] *************************
skipping: [localhost]

TASK [edxapp : tag instance with edxapp theme version] *************************
skipping: [localhost]

TASK [edxapp : set_fact] *******************************************************
ok: [localhost]

TASK [edxapp : restart edxapp] *************************************************
skipping: [localhost] => (item=lms) 
skipping: [localhost] => (item=cms) 

TASK [edxapp : restart edxapp_workers] *****************************************
changed: [localhost]

TASK [edxapp : create service worker users] ************************************
changed: [localhost] => (item={u'username': u'enterprise_worker', u'is_superuser': False, u'is_staff': True, u'email': u'enterprise_worker@example.com'})
changed: [localhost] => (item={u'username': u'veda_service_user', u'is_superuser': False, u'is_staff': True, u'email': u'veda_service_user@example.com'})
skipping: [localhost] => (item={u'username': u'journals_worker', u'is_superuser': False, u'is_staff': True, u'enabled': False, u'email': u'journals_worker@example.com'}) 
changed: [localhost] => (item={u'username': u'discovery_worker', u'is_superuser': False, u'is_staff': True, u'email': u'discovery_worker@example.com'})
changed: [localhost] => (item={u'username': u'insights_worker', u'is_superuser': False, u'is_staff': True, u'email': u'insights_worker@example.com'})
changed: [localhost] => (item={u'username': u'credentials_worker', u'is_superuser': False, u'is_staff': True, u'email': u'credentials_worker@example.com'})

TASK [edxapp : reindex all courses] ********************************************
skipping: [localhost]

TASK [edxapp : install cron job to run clearsessions] **************************
skipping: [localhost]

TASK [edxapp : install additional cron jobs] ***********************************

TASK [security : Install security packages] ************************************
skipping: [localhost] => (item=[]) 

TASK [security : Update all system packages] ***********************************
skipping: [localhost]

TASK [security : Configure periodic unattended-upgrades] ***********************
skipping: [localhost]

TASK [security : Disable unattended-upgrades if Xenial (16.04)] ****************
skipping: [localhost] => (item=systemctl disable apt-daily-upgrade.timer) 
skipping: [localhost] => (item=systemctl disable apt-daily.timer) 
skipping: [localhost] => (item=systemctl disable apt-daily.service) 

TASK [security : Disable unattended-upgrades] **********************************
skipping: [localhost]

TASK [security : Only unattended-upgrade from security repo] *******************
skipping: [localhost]

TASK [security : Disable security only updates on unattended-upgrades] *********
skipping: [localhost]

TASK [security : Take security updates during ansible runs] ********************
skipping: [localhost] => (item=unattended-upgrade) 
skipping: [localhost] => (item=unattended-upgrade --dry-run) 

TASK [security : Install security packages] ************************************
skipping: [localhost] => (item=[]) 

TASK [security : Enable automatic start for update service] ********************
skipping: [localhost]

TASK [security : Update all system packages] ***********************************
skipping: [localhost]

TASK [security : Configure security auto-updates] ******************************
skipping: [localhost] => (item={u'regexp': u'^apply_updates', u'line': u'apply_updates = yes'}) 
skipping: [localhost] => (item={u'regexp': u'^update_cmd', u'line': u'update_cmd = security'}) 

TASK [security : Take security updates during ansible runs] ********************
skipping: [localhost] => (item=yum update --security -y) 
skipping: [localhost] => (item=yum check-update --security) 

TASK [security : Install security packages] ************************************
skipping: [localhost] => (item=[]) 

TASK [security : Update all system packages] ***********************************
skipping: [localhost]

TASK [security : Configure periodic unattended-upgrades] ***********************
skipping: [localhost]

TASK [security : Disable unattended-upgrades if Xenial (16.04)] ****************
skipping: [localhost] => (item=systemctl disable apt-daily-upgrade.timer) 
skipping: [localhost] => (item=systemctl disable apt-daily.timer) 
skipping: [localhost] => (item=systemctl disable apt-daily.service) 

TASK [security : Disable unattended-upgrades] **********************************
skipping: [localhost]

TASK [security : Only unattended-upgrade from security repo] *******************
skipping: [localhost]

TASK [security : Disable security only updates on unattended-upgrades] *********
skipping: [localhost]

TASK [security : Take security updates during ansible runs] ********************
skipping: [localhost] => (item=unattended-upgrade) 
skipping: [localhost] => (item=unattended-upgrade --dry-run) 

TASK [security : Install security packages] ************************************
skipping: [localhost] => (item=[]) 

TASK [security : Enable automatic start for update service] ********************
skipping: [localhost]

TASK [security : Update all system packages] ***********************************
skipping: [localhost]

TASK [security : Configure security auto-updates] ******************************
skipping: [localhost] => (item={u'regexp': u'^apply_updates', u'line': u'apply_updates = yes'}) 
skipping: [localhost] => (item={u'regexp': u'^update_cmd', u'line': u'update_cmd = security'}) 

TASK [security : Take security updates during ansible runs] ********************
skipping: [localhost] => (item=yum update --security -y) 
skipping: [localhost] => (item=yum check-update --security) 

TASK [add_user : create user groups] *******************************************
skipping: [localhost] => (item=edx-themes) 

TASK [add_user : create application user] **************************************
skipping: [localhost]

TASK [add_user : ensure correct ownership of home directory] *******************
skipping: [localhost]

TASK [add_user : create dirs for the user] *************************************

TASK [git_clone : Set git fetch.prune to ignore deleted remote refs] ***********
skipping: [localhost]

TASK [git_clone : Validate git protocol] ***************************************
skipping: [localhost] => (item=(censored due to no_log)) 

TASK [git_clone : Install read-only ssh key] ***********************************
skipping: [localhost] => (item=(censored due to no_log)) 

TASK [git_clone : Check that working tree is clean] ****************************
skipping: [localhost] => (item=/edx/var/edx-themes/edx-themes) 

TASK [git_clone : Require a clean working tree] ********************************
skipping: [localhost] => (item={'skipped': True, '_ansible_no_log': False, 'skip_reason': u'Conditional result was False', '_ansible_item_result': True, 'item': u'/edx/var/edx-themes/edx-themes', 'changed': False}) 

TASK [git_clone : Checkout code over ssh] **************************************
skipping: [localhost] => (item=(censored due to no_log)) 

TASK [git_clone : Checkout code over https] ************************************
skipping: [localhost] => (item=(censored due to no_log)) 

TASK [git_clone : Remove read-only ssh key] ************************************
skipping: [localhost] => (item=(censored due to no_log)) 

TASK [git_clone : Run git clean after checking out code] ***********************
skipping: [localhost] => (item=(censored due to no_log)) 

TASK [edx_themes : ensure edx-theme's group has read/write access to themes directory] ***
skipping: [localhost]

TASK [edx_themes : Add theme users to theme's group so that that have read/write access to themes directories] ***
skipping: [localhost] => (item=edxapp) 

TASK [edx_themes : update .bashrc to set umask value] **************************
skipping: [localhost]

TASK [edxapp : create application user] ****************************************
ok: [localhost]

TASK [edxapp : create edxapp user dirs] ****************************************
ok: [localhost] => (item={u'path': u'/edx/app/edxapp'})
ok: [localhost] => (item={u'path': u'/edx/app/edxapp/.ssh'})
ok: [localhost] => (item={u'path': u'/edx/app/edxapp/venvs'})
ok: [localhost] => (item={u'path': u'/edx/var/edxapp/themes'})
ok: [localhost] => (item={u'path': u'/edx/var/edxapp/staticfiles'})
ok: [localhost] => (item={u'path': u'/edx/var/edxapp/course_static'})
changed: [localhost] => (item={u'path': u'/edx/var/edxapp/data'})
ok: [localhost] => (item={u'path': u'/edx/var/edxapp', u'mode': u'0775'})
ok: [localhost] => (item={u'path': u'/edx/var/edxapp/course_repos', u'mode': u'0775'})

TASK [edxapp : write devstack script] ******************************************
skipping: [localhost]

TASK [edxapp : create edxapp log dir] ******************************************
ok: [localhost]

TASK [edxapp : Ensure the tracking folder exists] ******************************
ok: [localhost]

TASK [edxapp : Ensure the tracking.log file exists] ****************************
changed: [localhost]

TASK [edxapp : create web-writable edxapp data dirs] ***************************
changed: [localhost] => (item=/edx/var/edxapp/data)
ok: [localhost] => (item=/edx/var/edxapp/uploads)
ok: [localhost] => (item=/edx/var/edxapp/media)

TASK [edxapp : install system packages on which LMS and CMS rely] **************
ok: [localhost] => (item=[u's3cmd', u'pkg-config', u'g++', u'apparmor-utils', u'curl', u'ipython', u'nodejs', u'ntp', u'libfreetype6-dev', u'libffi-dev', u'python-dev', u'libsqlite3-dev'])

TASK [edxapp : set up edxapp .npmrc] *******************************************
changed: [localhost]

TASK [edxapp : create log directories for service variants] ********************
ok: [localhost] => (item=lms)
ok: [localhost] => (item=cms)

TASK [edxapp : code sandbox | Check which `libblas` to use] ********************
ok: [localhost]

TASK [edxapp : code sandbox | Use libblas.so.3gf in Ubuntu] ********************
skipping: [localhost]

TASK [edxapp : code sandbox | Use libblas.so.3 in Ubuntu] **********************
ok: [localhost]

TASK [edxapp : code sandbox | Check which `liblapac` to use] *******************
ok: [localhost]

TASK [edxapp : code sandbox | Use liblapack.so.3gf in Ubuntu] ******************
skipping: [localhost]

TASK [edxapp : code sandbox | Use liblapack.so.3 in Ubuntu] ********************
ok: [localhost]

TASK [edxapp : code sandbox | Create edxapp sandbox user] **********************
ok: [localhost]

TASK [edxapp : code sandbox | Install apparmor utils system pkg] ***************
ok: [localhost]

TASK [edxapp : code sandbox | write out apparmor code sandbox config] **********
ok: [localhost]

TASK [edxapp : code sandbox | write out sandbox user sudoers config] ***********
ok: [localhost]

TASK [edxapp : code sandbox | start apparmor service] **************************
ok: [localhost]

TASK [edxapp : code sandbox | (bootstrap) load code sandbox profile] ***********
changed: [localhost]

TASK [edxapp : code sandbox | (bootstrap) put code sandbox into aa-enforce or aa-complain mode depending on EDXAPP_SANDBOX_ENFORCE] ***
changed: [localhost]

TASK [edxapp : copy the template to the desired location] **********************
ok: [localhost] => (item={u'dest': u'/edx/app/edxapp/edxapp_env', u'src': u'edxapp_env.j2', u'group': u'www-data', u'mode': u'0644', u'owner': u'edxapp'})
ok: [localhost] => (item={u'dest': u'/edx/app/edxapp/newrelic.ini', u'src': u'newrelic.ini.j2', u'group': u'www-data', u'mode': u'0644', u'owner': u'edxapp'})
ok: [localhost] => (item={u'dest': u'/tmp/edxapp_git_ssh.sh', u'src': u'git_ssh.sh.j2', u'group': u'edxapp', u'mode': u'0750', u'owner': u'edxapp'})
ok: [localhost] => (item={u'dest': u'/edx/app/edxapp/.boto', u'src': u'boto.j2', u'group': u'www-data', u'mode': u'0644', u'owner': u'edxapp'})

TASK [edxapp : install read-only ssh key] **************************************
skipping: [localhost]

TASK [edxapp : set git fetch.prune to ignore deleted remote refs] **************
changed: [localhost]

TASK [edxapp : checkout edx-platform repo into /edx/app/edxapp/edx-platform] ***
ok: [localhost]

TASK [edxapp : git clean after checking out edx-platform] **********************
changed: [localhost]

TASK [edxapp : checkout Stanford-style theme] **********************************
skipping: [localhost]

TASK [simple_theme : assert] ***************************************************
skipping: [localhost]

TASK [simple_theme : assert] ***************************************************
skipping: [localhost]

TASK [simple_theme : Check whether theme directory already exists] *************
skipping: [localhost]

TASK [simple_theme : Download skeleton theme] **********************************
skipping: [localhost]

TASK [simple_theme : Adjust owner/group of downloaded skeleton theme] **********
skipping: [localhost]

TASK [simple_theme : Create default skeleton (dirs)] ***************************
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'lms', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/../files/default_skeleton', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'lms/static', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/../files/default_skeleton', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'lms/static/sass', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/../files/default_skeleton', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'lms/static/sass/discussion', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/../files/default_skeleton', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'src': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/../files/default_skeleton/lms/static/sass/lms-main-v2.scss', 'group': 'soumyakant', 'uid': 1000, 'state': 'file', 'gid': 1000, 'mode': '0664', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'lms/static/sass/lms-main-v2.scss', 'size': 65, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/../files/default_skeleton', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'src': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/../files/default_skeleton/lms/static/sass/lms-main-v1.scss', 'group': 'soumyakant', 'uid': 1000, 'state': 'file', 'gid': 1000, 'mode': '0664', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'lms/static/sass/lms-main-v1.scss', 'size': 65, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/../files/default_skeleton', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'src': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/../files/default_skeleton/lms/static/sass/lms-course.scss', 'group': 'soumyakant', 'uid': 1000, 'state': 'file', 'gid': 1000, 'mode': '0664', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'lms/static/sass/lms-course.scss', 'size': 63, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/../files/default_skeleton', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'src': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/../files/default_skeleton/lms/static/sass/discussion/lms-discussion-main.scss', 'group': 'soumyakant', 'uid': 1000, 'state': 'file', 'gid': 1000, 'mode': '0664', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'lms/static/sass/discussion/lms-discussion-main.scss', 'size': 86, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/../files/default_skeleton', 'ctime': 1559054298.677964}) 

TASK [simple_theme : Create default skeleton (files)] **************************
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'lms', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/../files/default_skeleton', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'lms/static', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/../files/default_skeleton', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'lms/static/sass', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/../files/default_skeleton', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'lms/static/sass/discussion', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/../files/default_skeleton', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'src': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/../files/default_skeleton/lms/static/sass/lms-main-v2.scss', 'group': 'soumyakant', 'uid': 1000, 'state': 'file', 'gid': 1000, 'mode': '0664', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'lms/static/sass/lms-main-v2.scss', 'size': 65, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/../files/default_skeleton', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'src': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/../files/default_skeleton/lms/static/sass/lms-main-v1.scss', 'group': 'soumyakant', 'uid': 1000, 'state': 'file', 'gid': 1000, 'mode': '0664', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'lms/static/sass/lms-main-v1.scss', 'size': 65, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/../files/default_skeleton', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'src': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/../files/default_skeleton/lms/static/sass/lms-course.scss', 'group': 'soumyakant', 'uid': 1000, 'state': 'file', 'gid': 1000, 'mode': '0664', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'lms/static/sass/lms-course.scss', 'size': 63, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/../files/default_skeleton', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'src': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/../files/default_skeleton/lms/static/sass/discussion/lms-discussion-main.scss', 'group': 'soumyakant', 'uid': 1000, 'state': 'file', 'gid': 1000, 'mode': '0664', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'lms/static/sass/discussion/lms-discussion-main.scss', 'size': 86, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/../files/default_skeleton', 'ctime': 1559054298.677964}) 

TASK [simple_theme : Create directory to hold the theme and styles] ************
skipping: [localhost] => (item=.) 
skipping: [localhost] => (item=lms/static/sass/partials/lms/theme) 

TASK [simple_theme : Compile the templates] ************************************
skipping: [localhost] => (item=lms/static/sass/partials/lms/theme/_variables-v1.scss) 
skipping: [localhost] => (item=lms/static/sass/_lms-overrides.scss) 

TASK [simple_theme : Create directories for static files to be copied] *********
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'default_skeleton', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'example_static_dir', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'default_skeleton/lms', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'default_skeleton/lms/static', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'default_skeleton/lms/static/sass', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'default_skeleton/lms/static/sass/discussion', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'src': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/default_skeleton/lms/static/sass/lms-main-v2.scss', 'group': 'soumyakant', 'uid': 1000, 'state': 'file', 'gid': 1000, 'mode': '0664', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'default_skeleton/lms/static/sass/lms-main-v2.scss', 'size': 65, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'src': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/default_skeleton/lms/static/sass/lms-main-v1.scss', 'group': 'soumyakant', 'uid': 1000, 'state': 'file', 'gid': 1000, 'mode': '0664', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'default_skeleton/lms/static/sass/lms-main-v1.scss', 'size': 65, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'src': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/default_skeleton/lms/static/sass/lms-course.scss', 'group': 'soumyakant', 'uid': 1000, 'state': 'file', 'gid': 1000, 'mode': '0664', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'default_skeleton/lms/static/sass/lms-course.scss', 'size': 63, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'src': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/default_skeleton/lms/static/sass/discussion/lms-discussion-main.scss', 'group': 'soumyakant', 'uid': 1000, 'state': 'file', 'gid': 1000, 'mode': '0664', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'default_skeleton/lms/static/sass/discussion/lms-discussion-main.scss', 'size': 86, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'example_static_dir/lms', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'example_static_dir/cms', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'example_static_dir/lms/images', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'example_static_dir/lms/js', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'src': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/example_static_dir/lms/images/favicon.ico', 'group': 'soumyakant', 'uid': 1000, 'state': 'file', 'gid': 1000, 'mode': '0664', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'example_static_dir/lms/images/favicon.ico', 'size': 34894, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'src': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/example_static_dir/lms/images/logo.png', 'group': 'soumyakant', 'uid': 1000, 'state': 'file', 'gid': 1000, 'mode': '0664', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'example_static_dir/lms/images/logo.png', 'size': 928, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'src': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/example_static_dir/lms/js/myscript.js', 'group': 'soumyakant', 'uid': 1000, 'state': 'file', 'gid': 1000, 'mode': '0664', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'example_static_dir/lms/js/myscript.js', 'size': 42, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'example_static_dir/cms/images', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'src': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/example_static_dir/cms/images/logo.png', 'group': 'soumyakant', 'uid': 1000, 'state': 'file', 'gid': 1000, 'mode': '0664', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'example_static_dir/cms/images/logo.png', 'size': 1494, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 

TASK [simple_theme : Copy static files (adding "static/")] *********************
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'example_static_dir', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'default_skeleton', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'default_skeleton/lms', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'default_skeleton/lms/static', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'default_skeleton/lms/static/sass', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'default_skeleton/lms/static/sass/discussion', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'src': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/default_skeleton/lms/static/sass/lms-main-v2.scss', 'group': 'soumyakant', 'uid': 1000, 'state': 'file', 'gid': 1000, 'mode': '0664', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'default_skeleton/lms/static/sass/lms-main-v2.scss', 'size': 65, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'src': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/default_skeleton/lms/static/sass/lms-main-v1.scss', 'group': 'soumyakant', 'uid': 1000, 'state': 'file', 'gid': 1000, 'mode': '0664', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'default_skeleton/lms/static/sass/lms-main-v1.scss', 'size': 65, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'src': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/default_skeleton/lms/static/sass/lms-course.scss', 'group': 'soumyakant', 'uid': 1000, 'state': 'file', 'gid': 1000, 'mode': '0664', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'default_skeleton/lms/static/sass/lms-course.scss', 'size': 63, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'src': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/default_skeleton/lms/static/sass/discussion/lms-discussion-main.scss', 'group': 'soumyakant', 'uid': 1000, 'state': 'file', 'gid': 1000, 'mode': '0664', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'default_skeleton/lms/static/sass/discussion/lms-discussion-main.scss', 'size': 86, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'example_static_dir/lms', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'example_static_dir/cms', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'example_static_dir/lms/images', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'example_static_dir/lms/js', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'src': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/example_static_dir/lms/images/favicon.ico', 'group': 'soumyakant', 'uid': 1000, 'state': 'file', 'gid': 1000, 'mode': '0664', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'example_static_dir/lms/images/favicon.ico', 'size': 34894, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'src': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/example_static_dir/lms/images/logo.png', 'group': 'soumyakant', 'uid': 1000, 'state': 'file', 'gid': 1000, 'mode': '0664', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'example_static_dir/lms/images/logo.png', 'size': 928, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'src': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/example_static_dir/lms/js/myscript.js', 'group': 'soumyakant', 'uid': 1000, 'state': 'file', 'gid': 1000, 'mode': '0664', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'example_static_dir/lms/js/myscript.js', 'size': 42, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'group': 'soumyakant', 'uid': 1000, 'state': 'directory', 'gid': 1000, 'mode': '0775', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'example_static_dir/cms/images', 'size': 4096, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 
skipping: [localhost] => (item={'src': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/example_static_dir/cms/images/logo.png', 'group': 'soumyakant', 'uid': 1000, 'state': 'file', 'gid': 1000, 'mode': '0664', 'mtime': 1559054298.677964, 'owner': 'soumyakant', 'path': u'example_static_dir/cms/images/logo.png', 'size': 1494, 'root': u'/var/tmp/configuration/playbooks/roles/simple_theme/files/', 'ctime': 1559054298.677964}) 

TASK [simple_theme : Create directories for static files to be downloaded] *****

TASK [simple_theme : Download static files to be included in theme] ************

TASK [edxapp : Stat each requirements file with Github URLs to ensure it exists] ***
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx/custom.txt)
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx/base.txt)
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx-sandbox/base.txt)

TASK [edxapp : Updating requirement files for git mirror] **********************
skipping: [localhost] => (item={'_ansible_parsed': True, u'stat': {u'exists': False}, '_ansible_item_result': True, '_ansible_no_log': False, u'changed': False, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx/custom.txt', u'invocation': {u'module_args': {u'checksum_algorithm': u'sha1', u'get_checksum': True, u'follow': False, u'path': u'/edx/app/edxapp/edx-platform/requirements/edx/custom.txt', u'get_md5': True, u'get_mime': True, u'get_attributes': True}}}) 
changed: [localhost] => (item={'_ansible_parsed': True, u'stat': {u'isuid': False, u'uid': 1003, u'exists': True, u'attr_flags': u'e', u'woth': False, u'isreg': True, u'device_type': 0, u'mtime': 1559153280.9254346, u'block_size': 4096, u'inode': 1317741, u'isgid': False, u'size': 8266, u'executable': False, u'charset': u'us-ascii', u'readable': True, u'version': u'1841440470', u'pw_name': u'edxapp', u'gid': 1004, u'ischr': False, u'wusr': True, u'writeable': True, u'mimetype': u'text/plain', u'blocks': 24, u'xoth': False, u'islnk': False, u'nlink': 1, u'issock': False, u'rgrp': True, u'gr_name': u'edxapp', u'path': u'/edx/app/edxapp/edx-platform/requirements/edx/base.txt', u'xusr': False, u'atime': 1559153288.4258616, u'md5': u'b0c378521b9ee6a6d9081e3bfd6bba87', u'isdir': False, u'ctime': 1559153280.9254346, u'isblk': False, u'wgrp': False, u'xgrp': False, u'dev': 2049, u'roth': True, u'isfifo': False, u'mode': u'0644', u'checksum': u'ffe1b0f986361695e6e7832157f6d9a85e00a93a', u'rusr': True, u'attributes': [u'extents']}, '_ansible_item_result': True, '_ansible_no_log': False, u'changed': False, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx/base.txt', u'invocation': {u'module_args': {u'checksum_algorithm': u'sha1', u'get_checksum': True, u'follow': False, u'path': u'/edx/app/edxapp/edx-platform/requirements/edx/base.txt', u'get_md5': True, u'get_mime': True, u'get_attributes': True}}})
changed: [localhost] => (item={'_ansible_parsed': True, u'stat': {u'isuid': False, u'uid': 1003, u'exists': True, u'attr_flags': u'e', u'woth': False, u'isreg': True, u'device_type': 0, u'mtime': 1559153281.0732853, u'block_size': 4096, u'inode': 1318382, u'isgid': False, u'size': 649, u'executable': False, u'charset': u'us-ascii', u'readable': True, u'version': u'18446744073369064935', u'pw_name': u'edxapp', u'gid': 1004, u'ischr': False, u'wusr': True, u'writeable': True, u'mimetype': u'text/plain', u'blocks': 8, u'xoth': False, u'islnk': False, u'nlink': 1, u'issock': False, u'rgrp': True, u'gr_name': u'edxapp', u'path': u'/edx/app/edxapp/edx-platform/requirements/edx-sandbox/base.txt', u'xusr': False, u'atime': 1559153592.1288722, u'md5': u'01743aae5e1e34bf17819bb00e8a2cd8', u'isdir': False, u'ctime': 1559153281.0732853, u'isblk': False, u'wgrp': False, u'xgrp': False, u'dev': 2049, u'roth': True, u'isfifo': False, u'mode': u'0644', u'checksum': u'e42a6f92316bc52dc3880f2a87d412085f089785', u'rusr': True, u'attributes': [u'extents']}, '_ansible_item_result': True, '_ansible_no_log': False, u'changed': False, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx-sandbox/base.txt', u'invocation': {u'module_args': {u'checksum_algorithm': u'sha1', u'get_checksum': True, u'follow': False, u'path': u'/edx/app/edxapp/edx-platform/requirements/edx-sandbox/base.txt', u'get_md5': True, u'get_mime': True, u'get_attributes': True}}})

TASK [edxapp : Create the virtualenv to install the Python requirements] *******
ok: [localhost]

TASK [edxapp : Pin pip to a specific version.] *********************************
changed: [localhost]

TASK [edxapp : Stat each Python requirements file to ensure it exists] *********
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx/custom.txt)
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx/base.txt)

TASK [edxapp : install python requirements] ************************************
skipping: [localhost] => (item={'_ansible_parsed': True, u'stat': {u'exists': False}, '_ansible_item_result': True, '_ansible_no_log': False, u'changed': False, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx/custom.txt', u'invocation': {u'module_args': {u'checksum_algorithm': u'sha1', u'get_checksum': True, u'follow': False, u'path': u'/edx/app/edxapp/edx-platform/requirements/edx/custom.txt', u'get_md5': True, u'get_mime': True, u'get_attributes': True}}}) 
changed: [localhost] => (item={'_ansible_parsed': True, u'stat': {u'isuid': False, u'uid': 1003, u'exists': True, u'attr_flags': u'e', u'woth': False, u'isreg': True, u'device_type': 0, u'mtime': 1559154921.9351895, u'block_size': 4096, u'inode': 1317926, u'isgid': False, u'size': 8266, u'executable': False, u'charset': u'us-ascii', u'readable': True, u'version': u'129791374', u'pw_name': u'edxapp', u'gid': 1004, u'ischr': False, u'wusr': True, u'writeable': True, u'mimetype': u'text/plain', u'blocks': 24, u'xoth': False, u'islnk': False, u'nlink': 1, u'issock': False, u'rgrp': True, u'gr_name': u'edxapp', u'path': u'/edx/app/edxapp/edx-platform/requirements/edx/base.txt', u'xusr': False, u'atime': 1559154921.9351895, u'md5': u'b0c378521b9ee6a6d9081e3bfd6bba87', u'isdir': False, u'ctime': 1559154921.9351895, u'isblk': False, u'wgrp': False, u'xgrp': False, u'dev': 2049, u'roth': True, u'isfifo': False, u'mode': u'0644', u'checksum': u'ffe1b0f986361695e6e7832157f6d9a85e00a93a', u'rusr': True, u'attributes': [u'extents']}, '_ansible_item_result': True, '_ansible_no_log': False, u'changed': False, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx/base.txt', u'invocation': {u'module_args': {u'checksum_algorithm': u'sha1', u'get_checksum': True, u'follow': False, u'path': u'/edx/app/edxapp/edx-platform/requirements/edx/base.txt', u'get_md5': True, u'get_mime': True, u'get_attributes': True}}})

TASK [edxapp : install python private requirements] ****************************
skipping: [localhost] => (item={u'extra_args': u'-e', u'name': u'git+https://github.com/schoolyourself/schoolyourself-xblock.git@5e4d37716e3e72640e832e961f7cc0d38d4ec47b#egg=schoolyourself-xblock'}) 
skipping: [localhost] => (item={u'extra_args': u'-e', u'name': u'git+https://github.com/OfficeDev/xblock-officemix.git@3f876b5f0267b017812620239533a29c7d562d24#egg=officemix'}) 
skipping: [localhost] => (item={u'extra_args': u'-e', u'name': u'git+https://github.com/oppia/xblock.git@9f6b95b7eb7dbabb96b77198a3202604f96adf65#egg=oppia-xblock'}) 
skipping: [localhost] => (item={u'name': u'xblock-problem-builder==3.1.3'}) 
skipping: [localhost] => (item={u'extra_args': u'-e', u'name': u'git+https://github.com/edx/AudioXBlock.git@1fbf19cc21613aead62799469e1593adb037fdd9#egg=audio-xblock'}) 
skipping: [localhost] => (item={u'extra_args': u'-e', u'name': u'git+https://github.com/edx/ConceptXBlock.git@2376fde9ebdd83684b78dde77ef96361c3bd1aa0#egg=concept-xblock'}) 
skipping: [localhost] => (item={u'extra_args': u'-e', u'name': u'git+https://github.com/edx/AnimationXBlock.git@d2b551bb8f49a138088e10298576102164145b87#egg=animation-xblock'}) 
skipping: [localhost] => (item={u'name': u'ubcpi-xblock==0.6.4'}) 
skipping: [localhost] => (item={u'extra_args': u'-e', u'name': u'git+https://github.com/open-craft/xblock-vectordraw.git@c57df9d98119fd2ca4cb31b9d16c27333cdc65ca#egg=xblock-vectordraw==0.2.1'}) 
skipping: [localhost] => (item={u'extra_args': u'-e', u'name': u'git+https://github.com/open-craft/xblock-activetable.git@e933d41bb86a8d50fb878787ca680165a092a6d5#egg=xblock-activetable'}) 

TASK [edxapp : install python extra requirements] ******************************

TASK [edxapp : install CAS attribute module] ***********************************
skipping: [localhost]

TASK [edxapp : install sandbox requirements into regular venv] *****************
skipping: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx-sandbox/base.txt) 

TASK [edxapp : create nodeenv] *************************************************
changed: [localhost]

TASK [edxapp : Set the npm registry] *******************************************
ok: [localhost]

TASK [edxapp : Set the npm registry permissions] *******************************
changed: [localhost]

TASK [edxapp : install node dependencies] **************************************
changed: [localhost]

TASK [edxapp : code sandbox | put sandbox apparmor profile in complain mode] ***
changed: [localhost]

TASK [edxapp : code sandbox | Install base sandbox requirements and create sandbox virtualenv] ***
ok: [localhost]

TASK [edxapp : code sandbox | put code sandbox into aa-enforce or aa-complain mode, depending on EDXAPP_SANDBOX_ENFORCE] ***
changed: [localhost]

TASK [edxapp : compiling all py files in the edx-platform repo] ****************
changed: [localhost]

TASK [edxapp : give other read permissions to the virtualenv] ******************
ok: [localhost]

TASK [edxapp : create service wrapper scripts - {{item}}] **********************
ok: [localhost] => (item=lms.sh)
ok: [localhost] => (item=cms.sh)
ok: [localhost] => (item=worker.sh)

TASK [edxapp : create application and auth config] *****************************
ok: [localhost] => (item=[u'lms', u'env'])
ok: [localhost] => (item=[u'lms', u'auth'])
ok: [localhost] => (item=[u'cms', u'env'])
ok: [localhost] => (item=[u'cms', u'auth'])

TASK [edxapp : combined lms auth env for yml] **********************************
ok: [localhost]

TASK [edxapp : render lms yml config] ******************************************
ok: [localhost] => (item=lms)
ok: [localhost] => (item=cms)

TASK [edxapp : combined cms auth env for yml] **********************************
ok: [localhost]

TASK [edxapp : render studio yml config] ***************************************
ok: [localhost] => (item=lms)
ok: [localhost] => (item=cms)

TASK [edxapp : writing {{ item }} supervisor script] ***************************
ok: [localhost] => (item=lms)
ok: [localhost] => (item=cms)

TASK [edxapp : writing celery supervisor scripts] ******************************
ok: [localhost] => (item=workers.conf)

TASK [edxapp : clean out old edxapp.conf] **************************************
ok: [localhost]

TASK [edxapp : add gunicorn configuration files] *******************************
ok: [localhost] => (item=lms)
ok: [localhost] => (item=cms)

TASK [edxapp : enable {{ item }} supervisor script] ****************************
ok: [localhost] => (item=lms)
ok: [localhost] => (item=cms)

TASK [edxapp : enable celery worker supervisor script] *************************
skipping: [localhost]

TASK [edxapp : create helper scripts for managing edxapp] **********************
ok: [localhost] => (item=[u'edxapp-migrate', u'lms'])
ok: [localhost] => (item=[u'edxapp-migrate', u'cms'])
ok: [localhost] => (item=[u'edxapp-runserver', u'lms'])
ok: [localhost] => (item=[u'edxapp-runserver', u'cms'])
ok: [localhost] => (item=[u'edxapp-shell', u'lms'])
ok: [localhost] => (item=[u'edxapp-shell', u'cms'])

TASK [edxapp : create script to compile and update assets] *********************
ok: [localhost]

TASK [edxapp : migrate] ********************************************************
changed: [localhost] => (item=lms)
changed: [localhost] => (item=cms)

TASK [edxapp : Remove and recreate the staticfiles directory so nothing stale can exist] ***
changed: [localhost] => (item=absent)
changed: [localhost] => (item=directory)

TASK [edxapp : gather static assets with paver] ********************************
changed: [localhost]

TASK [edxapp : update supervisor configuration] ********************************
ok: [localhost]

TASK [edxapp : ensure edxapp has started] **************************************
ok: [localhost] => (item=lms)
ok: [localhost] => (item=cms)

TASK [edxapp : ensure edxapp_workers has started] ******************************
skipping: [localhost]

TASK [edxapp : create symlinks from the venv bin dir and repo dir] *************
ok: [localhost] => (item=/edx/app/edxapp/venvs/edxapp/bin/python)
ok: [localhost] => (item=/edx/app/edxapp/venvs/edxapp/bin/pip)
ok: [localhost] => (item=/edx/app/edxapp/venvs/edxapp/bin/django-admin.py)
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/manage.py)

TASK [edxapp : remove read-only ssh key] ***************************************
skipping: [localhost]

TASK [edxapp : get instance information] ***************************************
skipping: [localhost]

TASK [edxapp : tag instance with edx_platform version] *************************
skipping: [localhost]

TASK [edxapp : tag instance with edxapp theme version] *************************
skipping: [localhost]

TASK [edxapp : set_fact] *******************************************************
ok: [localhost]

TASK [edxapp : restart edxapp] *************************************************
changed: [localhost] => (item=lms)
changed: [localhost] => (item=cms)

TASK [edxapp : restart edxapp_workers] *****************************************
skipping: [localhost]

TASK [edxapp : create service worker users] ************************************
changed: [localhost] => (item={u'username': u'enterprise_worker', u'is_superuser': False, u'is_staff': True, u'email': u'enterprise_worker@example.com'})
changed: [localhost] => (item={u'username': u'veda_service_user', u'is_superuser': False, u'is_staff': True, u'email': u'veda_service_user@example.com'})
skipping: [localhost] => (item={u'username': u'journals_worker', u'is_superuser': False, u'is_staff': True, u'enabled': False, u'email': u'journals_worker@example.com'}) 
changed: [localhost] => (item={u'username': u'discovery_worker', u'is_superuser': False, u'is_staff': True, u'email': u'discovery_worker@example.com'})
changed: [localhost] => (item={u'username': u'insights_worker', u'is_superuser': False, u'is_staff': True, u'email': u'insights_worker@example.com'})
changed: [localhost] => (item={u'username': u'credentials_worker', u'is_superuser': False, u'is_staff': True, u'email': u'credentials_worker@example.com'})

TASK [edxapp : reindex all courses] ********************************************
skipping: [localhost]

TASK [edxapp : install cron job to run clearsessions] **************************
skipping: [localhost]

TASK [edxapp : install additional cron jobs] ***********************************

TASK [add_user : create user groups] *******************************************
skipping: [localhost] => (item=edx-themes) 

TASK [add_user : create application user] **************************************
skipping: [localhost]

TASK [add_user : ensure correct ownership of home directory] *******************
skipping: [localhost]

TASK [add_user : create dirs for the user] *************************************

TASK [git_clone : Set git fetch.prune to ignore deleted remote refs] ***********
skipping: [localhost]

TASK [git_clone : Validate git protocol] ***************************************
skipping: [localhost] => (item=(censored due to no_log)) 

TASK [git_clone : Install read-only ssh key] ***********************************
skipping: [localhost] => (item=(censored due to no_log)) 

TASK [git_clone : Check that working tree is clean] ****************************
skipping: [localhost] => (item=/edx/var/edx-themes/edx-themes) 

TASK [git_clone : Require a clean working tree] ********************************
skipping: [localhost] => (item={'skipped': True, '_ansible_no_log': False, 'skip_reason': u'Conditional result was False', '_ansible_item_result': True, 'item': u'/edx/var/edx-themes/edx-themes', 'changed': False}) 

TASK [git_clone : Checkout code over ssh] **************************************
skipping: [localhost] => (item=(censored due to no_log)) 

TASK [git_clone : Checkout code over https] ************************************
skipping: [localhost] => (item=(censored due to no_log)) 

TASK [git_clone : Remove read-only ssh key] ************************************
skipping: [localhost] => (item=(censored due to no_log)) 

TASK [git_clone : Run git clean after checking out code] ***********************
skipping: [localhost] => (item=(censored due to no_log)) 

TASK [edx_themes : ensure edx-theme's group has read/write access to themes directory] ***
skipping: [localhost]

TASK [edx_themes : Add theme users to theme's group so that that have read/write access to themes directories] ***
skipping: [localhost] => (item=ecommerce) 

TASK [edx_themes : update .bashrc to set umask value] **************************
skipping: [localhost]

TASK [security : Install security packages] ************************************
skipping: [localhost] => (item=[]) 

TASK [security : Update all system packages] ***********************************
skipping: [localhost]

TASK [security : Configure periodic unattended-upgrades] ***********************
skipping: [localhost]

TASK [security : Disable unattended-upgrades if Xenial (16.04)] ****************
skipping: [localhost] => (item=systemctl disable apt-daily-upgrade.timer) 
skipping: [localhost] => (item=systemctl disable apt-daily.timer) 
skipping: [localhost] => (item=systemctl disable apt-daily.service) 

TASK [security : Disable unattended-upgrades] **********************************
skipping: [localhost]

TASK [security : Only unattended-upgrade from security repo] *******************
skipping: [localhost]

TASK [security : Disable security only updates on unattended-upgrades] *********
skipping: [localhost]

TASK [security : Take security updates during ansible runs] ********************
skipping: [localhost] => (item=unattended-upgrade) 
skipping: [localhost] => (item=unattended-upgrade --dry-run) 

TASK [security : Install security packages] ************************************
skipping: [localhost] => (item=[]) 

TASK [security : Enable automatic start for update service] ********************
skipping: [localhost]

TASK [security : Update all system packages] ***********************************
skipping: [localhost]

TASK [security : Configure security auto-updates] ******************************
skipping: [localhost] => (item={u'regexp': u'^apply_updates', u'line': u'apply_updates = yes'}) 
skipping: [localhost] => (item={u'regexp': u'^update_cmd', u'line': u'update_cmd = security'}) 

TASK [security : Take security updates during ansible runs] ********************
skipping: [localhost] => (item=yum update --security -y) 
skipping: [localhost] => (item=yum check-update --security) 

TASK [security : Install security packages] ************************************
skipping: [localhost] => (item=[]) 

TASK [security : Update all system packages] ***********************************
skipping: [localhost]

TASK [security : Configure periodic unattended-upgrades] ***********************
skipping: [localhost]

TASK [security : Disable unattended-upgrades if Xenial (16.04)] ****************
skipping: [localhost] => (item=systemctl disable apt-daily-upgrade.timer) 
skipping: [localhost] => (item=systemctl disable apt-daily.timer) 
skipping: [localhost] => (item=systemctl disable apt-daily.service) 

TASK [security : Disable unattended-upgrades] **********************************
skipping: [localhost]

TASK [security : Only unattended-upgrade from security repo] *******************
skipping: [localhost]

TASK [security : Disable security only updates on unattended-upgrades] *********
skipping: [localhost]

TASK [security : Take security updates during ansible runs] ********************
skipping: [localhost] => (item=unattended-upgrade) 
skipping: [localhost] => (item=unattended-upgrade --dry-run) 

TASK [security : Install security packages] ************************************
skipping: [localhost] => (item=[]) 

TASK [security : Enable automatic start for update service] ********************
skipping: [localhost]

TASK [security : Update all system packages] ***********************************
skipping: [localhost]

TASK [security : Configure security auto-updates] ******************************
skipping: [localhost] => (item={u'regexp': u'^apply_updates', u'line': u'apply_updates = yes'}) 
skipping: [localhost] => (item={u'regexp': u'^update_cmd', u'line': u'update_cmd = security'}) 

TASK [security : Take security updates during ansible runs] ********************
skipping: [localhost] => (item=yum update --security -y) 
skipping: [localhost] => (item=yum check-update --security) 

TASK [automated : Create automated user] ***************************************

TASK [automated : Create sudoers file from template] ***************************

TASK [automated : Create .ssh directory] ***************************************

TASK [automated : Build authorized_keys file] **********************************

TASK [automated : Build known_hosts file] **************************************

TASK [add_user : create user groups] *******************************************
ok: [localhost] => (item=ecommerce)

TASK [add_user : create application user] **************************************
ok: [localhost]

TASK [add_user : ensure correct ownership of home directory] *******************
ok: [localhost]

TASK [add_user : create dirs for the user] *************************************

TASK [git_clone : Set git fetch.prune to ignore deleted remote refs] ***********
changed: [localhost]

TASK [git_clone : Validate git protocol] ***************************************
skipping: [localhost] => (item=(censored due to no_log)) 

TASK [git_clone : Install read-only ssh key] ***********************************
skipping: [localhost] => (item=(censored due to no_log)) 

TASK [git_clone : Check that working tree is clean] ****************************
changed: [localhost] => (item=/edx/app/ecommerce/ecommerce)

TASK [git_clone : Require a clean working tree] ********************************
skipping: [localhost] => (item={'_ansible_parsed': True, 'stderr_lines': [], u'changed': True, u'end': u'2019-05-30 01:05:18.318728', '_ansible_no_log': False, u'stdout': u'', '_ansible_item_result': True, u'rc': 0, u'start': u'2019-05-30 01:05:15.050236', u'cmd': u'test ! -e "/edx/app/ecommerce/ecommerce" || git -C "/edx/app/ecommerce/ecommerce" status --porcelain --untracked-files=no', 'item': u'/edx/app/ecommerce/ecommerce', u'delta': u'0:00:03.268492', u'invocation': {u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': True, u'_raw_params': u'test ! -e "/edx/app/ecommerce/ecommerce" || git -C "/edx/app/ecommerce/ecommerce" status --porcelain --untracked-files=no', u'removes': None, u'warn': True, u'chdir': None}}, 'stdout_lines': [], u'stderr': u''}) 

TASK [git_clone : Checkout code over ssh] **************************************
skipping: [localhost] => (item=(censored due to no_log)) 

TASK [git_clone : Checkout code over https] ************************************
ok: [localhost] => (item=(censored due to no_log))

TASK [git_clone : Remove read-only ssh key] ************************************
skipping: [localhost] => (item=(censored due to no_log)) 

TASK [git_clone : Run git clean after checking out code] ***********************
changed: [localhost] => (item=(censored due to no_log))

TASK [edx_service : Create edx_service app, venv, data, and staticfiles dirs] ***
ok: [localhost] => (item=)
ok: [localhost] => (item=venvs)
ok: [localhost] => (item=data)
ok: [localhost] => (item=staticfiles)

TASK [edx_service : Create /edx/var/app dir] ***********************************
ok: [localhost]

TASK [edx_service : Create /edx/etc dir] ***************************************
changed: [localhost]

TASK [edx_service : Create edx_service log dir] ********************************
ok: [localhost] => (item=/edx/var/log/ecommerce)

TASK [edx_service : Write out app config file] *********************************
 [WARNING]: when statements should not include jinja2 templating delimiters
such as {{ }} or {% %}. Found: {{ edx_django_service_config }}
ok: [localhost]

TASK [edx_service : Install a bunch of system packages on which edx_service relies] ***
ok: [localhost] => (item=[u'gettext', u'libffi-dev', u'libmemcached-dev', u'libmysqlclient-dev', u'libssl-dev', u'libmysqlclient-dev', u'libjpeg-dev', u'libssl-dev', u'libffi-dev'])

TASK [edx_service : Install a bunch of system packages on which edx_service relies] ***

TASK [edx_service : Get instance information] **********************************
ok: [localhost]

TASK [edx_service : Tag instance] **********************************************
skipping: [localhost] => (item=[{u'DOMAIN': u'github.com', u'PROTOCOL': u'https', u'DESTINATION': u'/edx/app/ecommerce/ecommerce', u'SSH_KEY': None, u'REPO': u'ecommerce.git', u'VERSION': u'open-release/ironwood.1', u'PATH': u'edx'}, {'_ansible_parsed': True, u'changed': False, '_ansible_no_log': True, '_ansible_item_result': True, u'remote_url_changed': False, 'item': {u'DOMAIN': u'github.com', u'PROTOCOL': u'https', u'DESTINATION': u'/edx/app/ecommerce/ecommerce', u'SSH_KEY': None, u'REPO': u'ecommerce.git', u'VERSION': u'open-release/ironwood.1', u'PATH': u'edx'}, u'invocation': {u'module_args': {u'executable': None, u'force': False, u'refspec': None, u'reference': None, u'dest': u'/edx/app/ecommerce/ecommerce', u'verify_commit': False, u'clone': True, u'umask': None, u'update': True, u'ssh_opts': None, u'repo': u'https://github.com/edx/ecommerce.git', u'track_submodules': False, u'depth': 1, u'version': u'open-release/ironwood.1', u'bare': False, u'recursive': True, u'remote': u'origin', u'key_file': None, u'accept_hostkey': False}}, u'after': u'eac16d1f148b03cb833be4205533d1f4d169706f', u'before': u'eac16d1f148b03cb833be4205533d1f4d169706f'}]) 

TASK [edx_django_service : add gunicorn configuration file] ********************
ok: [localhost]

TASK [edx_django_service : install python3] ************************************
skipping: [localhost] => (item=[]) 

TASK [edx_django_service : build virtualenv with python3] **********************
skipping: [localhost]

TASK [edx_django_service : build virtualenv with python2.7] ********************
ok: [localhost]

TASK [edx_django_service : Pin pip to a specific version.] *********************
changed: [localhost]

TASK [edx_django_service : install nodenv] *************************************
changed: [localhost]

TASK [edx_django_service : create nodeenv] *************************************
ok: [localhost]

TASK [edx_django_service : install production requirements] ********************
changed: [localhost]

TASK [edx_django_service : install development requirements] *******************
skipping: [localhost]

TASK [edx_django_service : migrate database] ***********************************
changed: [localhost]

TASK [edx_django_service : run post-migrate commands] **************************
changed: [localhost] => (item={u'when': True, u'command': u'./manage.py oscar_populate_countries --initial-only'})
changed: [localhost] => (item={u'when': True, u'command': u'./manage.py create_or_update_site --site-id=1 --site-domain=localhost:8002 --partner-code=edX --partner-name="Open edX" --lms-url-root=http://127.0.0.1:8000 --client-side-payment-processor=cybersource --payment-processors=cybersource,paypal --client-id=ecommerce-key --client-secret=ecommerce-secret --from-email staff@example.com --discovery_api_url=http://localhost:8008/api/v1/ --journals_api_url='})
changed: [localhost] => (item={u'when': True, u'command': u'./manage.py create_demo_data --partner=edX'})

TASK [edx_django_service : ensure log files exist for tailing] *****************
changed: [localhost] => (item=/edx/var/log/supervisor/ecommerce-stdout.log)
changed: [localhost] => (item=/edx/var/log/supervisor/ecommerce-stderr.log)

TASK [edx_django_service : write out the supervisor wrapper] *******************
ok: [localhost]

TASK [edx_django_service : write supervisord config] ***************************
ok: [localhost]

TASK [edx_django_service : write devstack script] ******************************
skipping: [localhost]

TASK [edx_django_service : setup the app env file] *****************************
ok: [localhost]

TASK [edx_django_service : enable supervisor script] ***************************
ok: [localhost]

TASK [edx_django_service : update supervisor configuration] ********************
changed: [localhost]

TASK [edx_django_service : create symlinks from the venv bin dir] **************
ok: [localhost] => (item=python)
ok: [localhost] => (item=pip)
ok: [localhost] => (item=django-admin.py)

TASK [edx_django_service : create symlinks from the repo dir] ******************
ok: [localhost] => (item=manage.py)

TASK [edx_django_service : compile static assets] ******************************
changed: [localhost]

TASK [edx_django_service : restart the application] ****************************
changed: [localhost]

TASK [edx_django_service : Copying nginx configs for the service] **************
ok: [localhost]

TASK [edx_django_service : Creating nginx config links for the service] ********
ok: [localhost]

TASK [security : Install security packages] ************************************
skipping: [localhost] => (item=[]) 

TASK [security : Update all system packages] ***********************************
skipping: [localhost]

TASK [security : Configure periodic unattended-upgrades] ***********************
skipping: [localhost]

TASK [security : Disable unattended-upgrades if Xenial (16.04)] ****************
skipping: [localhost] => (item=systemctl disable apt-daily-upgrade.timer) 
skipping: [localhost] => (item=systemctl disable apt-daily.timer) 
skipping: [localhost] => (item=systemctl disable apt-daily.service) 

TASK [security : Disable unattended-upgrades] **********************************
skipping: [localhost]

TASK [security : Only unattended-upgrade from security repo] *******************
skipping: [localhost]

TASK [security : Disable security only updates on unattended-upgrades] *********
skipping: [localhost]

TASK [security : Take security updates during ansible runs] ********************
skipping: [localhost] => (item=unattended-upgrade) 
skipping: [localhost] => (item=unattended-upgrade --dry-run) 

TASK [security : Install security packages] ************************************
skipping: [localhost] => (item=[]) 

TASK [security : Enable automatic start for update service] ********************
skipping: [localhost]

TASK [security : Update all system packages] ***********************************
skipping: [localhost]

TASK [security : Configure security auto-updates] ******************************
skipping: [localhost] => (item={u'regexp': u'^apply_updates', u'line': u'apply_updates = yes'}) 
skipping: [localhost] => (item={u'regexp': u'^update_cmd', u'line': u'update_cmd = security'}) 

TASK [security : Take security updates during ansible runs] ********************
skipping: [localhost] => (item=yum update --security -y) 
skipping: [localhost] => (item=yum check-update --security) 

TASK [antivirus : install antivirus system packages] ***************************
skipping: [localhost] => (item=[]) 

TASK [antivirus : create antivirus scanner user] *******************************
skipping: [localhost]

TASK [antivirus : create antivirus edx directories] ****************************
skipping: [localhost] => (item=/edx/app/antivirus) 
skipping: [localhost] => (item=/edx/var/log/antivirus) 
skipping: [localhost] => (item=/edx/app/antivirus/data) 

TASK [antivirus : Ensure the clamav.log file exists] ***************************
skipping: [localhost]

TASK [antivirus : install antivirus s3 scanner script] *************************
skipping: [localhost]

TASK [antivirus : install antivirus s3 scanner cronjob] ************************
skipping: [localhost] => (item=None) 

TASK [antivirus : install antivirus server scanner script] *********************
skipping: [localhost]

TASK [antivirus : install antivirus server scanner cronjob] ********************
skipping: [localhost]

TASK [ecommerce : Create Apple Pay certificates directory] *********************
ok: [localhost]

TASK [ecommerce : Write Apple Pay merchant certificates] ***********************
ok: [localhost]

TASK [security : Install security packages] ************************************
skipping: [localhost] => (item=[]) 

TASK [security : Update all system packages] ***********************************
skipping: [localhost]

TASK [security : Configure periodic unattended-upgrades] ***********************
skipping: [localhost]

TASK [security : Disable unattended-upgrades if Xenial (16.04)] ****************
skipping: [localhost] => (item=systemctl disable apt-daily-upgrade.timer) 
skipping: [localhost] => (item=systemctl disable apt-daily.timer) 
skipping: [localhost] => (item=systemctl disable apt-daily.service) 

TASK [security : Disable unattended-upgrades] **********************************
skipping: [localhost]

TASK [security : Only unattended-upgrade from security repo] *******************
skipping: [localhost]

TASK [security : Disable security only updates on unattended-upgrades] *********
skipping: [localhost]

TASK [security : Take security updates during ansible runs] ********************
skipping: [localhost] => (item=unattended-upgrade) 
skipping: [localhost] => (item=unattended-upgrade --dry-run) 

TASK [security : Install security packages] ************************************
skipping: [localhost] => (item=[]) 

TASK [security : Enable automatic start for update service] ********************
skipping: [localhost]

TASK [security : Update all system packages] ***********************************
skipping: [localhost]

TASK [security : Configure security auto-updates] ******************************
skipping: [localhost] => (item={u'regexp': u'^apply_updates', u'line': u'apply_updates = yes'}) 
skipping: [localhost] => (item={u'regexp': u'^update_cmd', u'line': u'update_cmd = security'}) 

TASK [security : Take security updates during ansible runs] ********************
skipping: [localhost] => (item=yum update --security -y) 
skipping: [localhost] => (item=yum check-update --security) 

TASK [security : Install security packages] ************************************
skipping: [localhost] => (item=[]) 

TASK [security : Update all system packages] ***********************************
skipping: [localhost]

TASK [security : Configure periodic unattended-upgrades] ***********************
skipping: [localhost]

TASK [security : Disable unattended-upgrades if Xenial (16.04)] ****************
skipping: [localhost] => (item=systemctl disable apt-daily-upgrade.timer) 
skipping: [localhost] => (item=systemctl disable apt-daily.timer) 
skipping: [localhost] => (item=systemctl disable apt-daily.service) 

TASK [security : Disable unattended-upgrades] **********************************
skipping: [localhost]

TASK [security : Only unattended-upgrade from security repo] *******************
skipping: [localhost]

TASK [security : Disable security only updates on unattended-upgrades] *********
skipping: [localhost]

TASK [security : Take security updates during ansible runs] ********************
skipping: [localhost] => (item=unattended-upgrade) 
skipping: [localhost] => (item=unattended-upgrade --dry-run) 

TASK [security : Install security packages] ************************************
skipping: [localhost] => (item=[]) 

TASK [security : Enable automatic start for update service] ********************
skipping: [localhost]

TASK [security : Update all system packages] ***********************************
skipping: [localhost]

TASK [security : Configure security auto-updates] ******************************
skipping: [localhost] => (item={u'regexp': u'^apply_updates', u'line': u'apply_updates = yes'}) 
skipping: [localhost] => (item={u'regexp': u'^update_cmd', u'line': u'update_cmd = security'}) 

TASK [security : Take security updates during ansible runs] ********************
skipping: [localhost] => (item=yum update --security -y) 
skipping: [localhost] => (item=yum check-update --security) 

TASK [add_user : create user groups] *******************************************
ok: [localhost] => (item=ecomworker)

TASK [add_user : create application user] **************************************
ok: [localhost]

TASK [add_user : ensure correct ownership of home directory] *******************
ok: [localhost]

TASK [add_user : create dirs for the user] *************************************

TASK [git_clone : Set git fetch.prune to ignore deleted remote refs] ***********
changed: [localhost]

TASK [git_clone : Validate git protocol] ***************************************
skipping: [localhost] => (item=(censored due to no_log)) 

TASK [git_clone : Install read-only ssh key] ***********************************
skipping: [localhost] => (item=(censored due to no_log)) 

TASK [git_clone : Check that working tree is clean] ****************************
changed: [localhost] => (item=/edx/app/ecomworker/ecomworker)

TASK [git_clone : Require a clean working tree] ********************************
skipping: [localhost] => (item={'_ansible_parsed': True, 'stderr_lines': [], u'changed': True, u'end': u'2019-05-30 01:12:13.423576', '_ansible_no_log': False, u'stdout': u'', '_ansible_item_result': True, u'rc': 0, u'start': u'2019-05-30 01:12:12.440252', u'cmd': u'test ! -e "/edx/app/ecomworker/ecomworker" || git -C "/edx/app/ecomworker/ecomworker" status --porcelain --untracked-files=no', 'item': u'/edx/app/ecomworker/ecomworker', u'delta': u'0:00:00.983324', u'invocation': {u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': True, u'_raw_params': u'test ! -e "/edx/app/ecomworker/ecomworker" || git -C "/edx/app/ecomworker/ecomworker" status --porcelain --untracked-files=no', u'removes': None, u'warn': True, u'chdir': None}}, 'stdout_lines': [], u'stderr': u''}) 

TASK [git_clone : Checkout code over ssh] **************************************
skipping: [localhost] => (item=(censored due to no_log)) 

TASK [git_clone : Checkout code over https] ************************************
ok: [localhost] => (item=(censored due to no_log))

TASK [git_clone : Remove read-only ssh key] ************************************
skipping: [localhost] => (item=(censored due to no_log)) 

TASK [git_clone : Run git clean after checking out code] ***********************
changed: [localhost] => (item=(censored due to no_log))

TASK [edx_service : Create edx_service app, venv, data, and staticfiles dirs] ***
ok: [localhost] => (item=)
ok: [localhost] => (item=venvs)
ok: [localhost] => (item=data)
ok: [localhost] => (item=staticfiles)

TASK [edx_service : Create /edx/var/app dir] ***********************************
ok: [localhost]

TASK [edx_service : Create /edx/etc dir] ***************************************
changed: [localhost]

TASK [edx_service : Create edx_service log dir] ********************************
ok: [localhost] => (item=/edx/var/log/ecomworker)

TASK [edx_service : Write out app config file] *********************************
 [WARNING]: when statements should not include jinja2 templating delimiters
such as {{ }} or {% %}. Found: {{ ECOMMERCE_WORKER_SERVICE_CONFIG }}
ok: [localhost]

TASK [edx_service : Install a bunch of system packages on which edx_service relies] ***

TASK [edx_service : Install a bunch of system packages on which edx_service relies] ***

TASK [edx_service : Get instance information] **********************************
ok: [localhost]

TASK [edx_service : Tag instance] **********************************************
skipping: [localhost] => (item=[{u'DOMAIN': u'github.com', u'PROTOCOL': u'https', u'DESTINATION': u'/edx/app/ecomworker/ecomworker', u'SSH_KEY': None, u'REPO': u'ecommerce-worker.git', u'VERSION': u'open-release/ironwood.1', u'PATH': u'edx'}, {'_ansible_parsed': True, u'changed': False, '_ansible_no_log': True, '_ansible_item_result': True, u'remote_url_changed': False, 'item': {u'DOMAIN': u'github.com', u'PROTOCOL': u'https', u'DESTINATION': u'/edx/app/ecomworker/ecomworker', u'SSH_KEY': None, u'REPO': u'ecommerce-worker.git', u'VERSION': u'open-release/ironwood.1', u'PATH': u'edx'}, u'invocation': {u'module_args': {u'executable': None, u'force': False, u'refspec': None, u'reference': None, u'dest': u'/edx/app/ecomworker/ecomworker', u'verify_commit': False, u'clone': True, u'umask': None, u'update': True, u'ssh_opts': None, u'repo': u'https://github.com/edx/ecommerce-worker.git', u'track_submodules': False, u'depth': 1, u'version': u'open-release/ironwood.1', u'bare': False, u'recursive': True, u'remote': u'origin', u'key_file': None, u'accept_hostkey': False}}, u'after': u'33ee0068d1b6d2ffd4d2ba806f2fc00c57a0ae03', u'before': u'33ee0068d1b6d2ffd4d2ba806f2fc00c57a0ae03'}]) 

TASK [ecomworker : install application requirements] ***************************
ok: [localhost] => (item=production.txt)
ok: [localhost] => (item=optional.txt)

TASK [ecomworker : write out the supervisor wrapper] ***************************
ok: [localhost]

TASK [ecomworker : write supervisord config] ***********************************
ok: [localhost]

TASK [ecomworker : setup the ecommerce_worker env file] ************************
ok: [localhost]

TASK [ecomworker : enable supervisor script] ***********************************
ok: [localhost]

TASK [ecomworker : update supervisor configuration] ****************************
changed: [localhost]

TASK [ecomworker : create symlinks from the venv bin dir] **********************
ok: [localhost] => (item=python)
ok: [localhost] => (item=pip)

TASK [ecomworker : restart the applicaton] *************************************
changed: [localhost]

TASK [security : Install security packages] ************************************
skipping: [localhost] => (item=[]) 

TASK [security : Update all system packages] ***********************************
skipping: [localhost]

TASK [security : Configure periodic unattended-upgrades] ***********************
skipping: [localhost]

TASK [security : Disable unattended-upgrades if Xenial (16.04)] ****************
skipping: [localhost] => (item=systemctl disable apt-daily.timer) 
skipping: [localhost] => (item=systemctl disable apt-daily.service) 
skipping: [localhost] => (item=systemctl disable apt-daily-upgrade.timer) 

TASK [security : Disable unattended-upgrades] **********************************
skipping: [localhost]

TASK [security : Only unattended-upgrade from security repo] *******************
skipping: [localhost]

TASK [security : Disable security only updates on unattended-upgrades] *********
skipping: [localhost]

TASK [security : Take security updates during ansible runs] ********************
skipping: [localhost] => (item=unattended-upgrade --dry-run) 
skipping: [localhost] => (item=unattended-upgrade) 

TASK [security : Install security packages] ************************************
skipping: [localhost] => (item=[]) 

TASK [security : Enable automatic start for update service] ********************
skipping: [localhost]

TASK [security : Update all system packages] ***********************************
skipping: [localhost]

TASK [security : Configure security auto-updates] ******************************
skipping: [localhost] => (item={u'regexp': u'^apply_updates', u'line': u'apply_updates = yes'}) 
skipping: [localhost] => (item={u'regexp': u'^update_cmd', u'line': u'update_cmd = security'}) 

TASK [security : Take security updates during ansible runs] ********************
skipping: [localhost] => (item=yum update --security -y) 
skipping: [localhost] => (item=yum check-update --security) 

TASK [security : Install security packages] ************************************
skipping: [localhost] => (item=[]) 

TASK [security : Update all system packages] ***********************************
skipping: [localhost]

TASK [security : Configure periodic unattended-upgrades] ***********************
skipping: [localhost]

TASK [security : Disable unattended-upgrades if Xenial (16.04)] ****************
skipping: [localhost] => (item=systemctl disable apt-daily-upgrade.timer) 
skipping: [localhost] => (item=systemctl disable apt-daily.timer) 
skipping: [localhost] => (item=systemctl disable apt-daily.service) 

TASK [security : Disable unattended-upgrades] **********************************
skipping: [localhost]

TASK [security : Only unattended-upgrade from security repo] *******************
skipping: [localhost]

TASK [security : Disable security only updates on unattended-upgrades] *********
skipping: [localhost]

TASK [security : Take security updates during ansible runs] ********************
skipping: [localhost] => (item=unattended-upgrade) 
skipping: [localhost] => (item=unattended-upgrade --dry-run) 

TASK [security : Install security packages] ************************************
skipping: [localhost] => (item=[]) 

TASK [security : Enable automatic start for update service] ********************
skipping: [localhost]

TASK [security : Update all system packages] ***********************************
skipping: [localhost]

TASK [security : Configure security auto-updates] ******************************
skipping: [localhost] => (item={u'regexp': u'^apply_updates', u'line': u'apply_updates = yes'}) 
skipping: [localhost] => (item={u'regexp': u'^update_cmd', u'line': u'update_cmd = security'}) 

TASK [security : Take security updates during ansible runs] ********************
skipping: [localhost] => (item=yum update --security -y) 
skipping: [localhost] => (item=yum check-update --security) 

TASK [automated : Create automated user] ***************************************
ok: [localhost] => (item={'key': u'automated_user', 'value': {u'sudo_commands': [{u'sudo_user': u'analytics_api', u'command': u'/edx/app/analytics_api/venvs/analytics_api/python /edx/app/analytics_api/analytics_api/manage.py showmigrations'}], u'authorized_keys': [u'SSH authorized key']}})

TASK [automated : Create sudoers file from template] ***************************
ok: [localhost] => (item={'key': u'automated_user', 'value': {u'sudo_commands': [{u'sudo_user': u'analytics_api', u'command': u'/edx/app/analytics_api/venvs/analytics_api/python /edx/app/analytics_api/analytics_api/manage.py showmigrations'}], u'authorized_keys': [u'SSH authorized key']}})

TASK [automated : Create .ssh directory] ***************************************
ok: [localhost] => (item={'key': u'automated_user', 'value': {u'sudo_commands': [{u'sudo_user': u'analytics_api', u'command': u'/edx/app/analytics_api/venvs/analytics_api/python /edx/app/analytics_api/analytics_api/manage.py showmigrations'}], u'authorized_keys': [u'SSH authorized key']}})

TASK [automated : Build authorized_keys file] **********************************
ok: [localhost] => (item={'key': u'automated_user', 'value': {u'sudo_commands': [{u'sudo_user': u'analytics_api', u'command': u'/edx/app/analytics_api/venvs/analytics_api/python /edx/app/analytics_api/analytics_api/manage.py showmigrations'}], u'authorized_keys': [u'SSH authorized key']}})

TASK [automated : Build known_hosts file] **************************************
changed: [localhost] => (item={'key': u'automated_user', 'value': {u'sudo_commands': [{u'sudo_user': u'analytics_api', u'command': u'/edx/app/analytics_api/venvs/analytics_api/python /edx/app/analytics_api/analytics_api/manage.py showmigrations'}], u'authorized_keys': [u'SSH authorized key']}})

TASK [add_user : create user groups] *******************************************
ok: [localhost] => (item=analytics_api)

TASK [add_user : create application user] **************************************
ok: [localhost]

TASK [add_user : ensure correct ownership of home directory] *******************
ok: [localhost]

TASK [add_user : create dirs for the user] *************************************

TASK [git_clone : Set git fetch.prune to ignore deleted remote refs] ***********
changed: [localhost]

TASK [git_clone : Validate git protocol] ***************************************
skipping: [localhost] => (item=(censored due to no_log)) 

TASK [git_clone : Install read-only ssh key] ***********************************
skipping: [localhost] => (item=(censored due to no_log)) 

TASK [git_clone : Check that working tree is clean] ****************************
changed: [localhost] => (item=/edx/app/analytics_api/analytics_api)

TASK [git_clone : Require a clean working tree] ********************************
skipping: [localhost] => (item={'_ansible_parsed': True, 'stderr_lines': [], u'changed': True, u'end': u'2019-05-30 01:13:06.808813', '_ansible_no_log': False, u'stdout': u'', '_ansible_item_result': True, u'rc': 0, u'start': u'2019-05-30 01:13:06.170966', u'cmd': u'test ! -e "/edx/app/analytics_api/analytics_api" || git -C "/edx/app/analytics_api/analytics_api" status --porcelain --untracked-files=no', 'item': u'/edx/app/analytics_api/analytics_api', u'delta': u'0:00:00.637847', u'invocation': {u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': True, u'_raw_params': u'test ! -e "/edx/app/analytics_api/analytics_api" || git -C "/edx/app/analytics_api/analytics_api" status --porcelain --untracked-files=no', u'removes': None, u'warn': True, u'chdir': None}}, 'stdout_lines': [], u'stderr': u''}) 

TASK [git_clone : Checkout code over ssh] **************************************
skipping: [localhost] => (item=(censored due to no_log)) 

TASK [git_clone : Checkout code over https] ************************************
ok: [localhost] => (item=(censored due to no_log))

TASK [git_clone : Remove read-only ssh key] ************************************
skipping: [localhost] => (item=(censored due to no_log)) 

TASK [git_clone : Run git clean after checking out code] ***********************
changed: [localhost] => (item=(censored due to no_log))

TASK [edx_service : Create edx_service app, venv, data, and staticfiles dirs] ***
ok: [localhost] => (item=)
ok: [localhost] => (item=venvs)
ok: [localhost] => (item=data)
ok: [localhost] => (item=staticfiles)

TASK [edx_service : Create /edx/var/app dir] ***********************************
ok: [localhost]

TASK [edx_service : Create /edx/etc dir] ***************************************
changed: [localhost]

TASK [edx_service : Create edx_service log dir] ********************************
ok: [localhost] => (item=/edx/var/log/analytics_api)

TASK [edx_service : Write out app config file] *********************************
 [WARNING]: when statements should not include jinja2 templating delimiters
such as {{ }} or {% %}. Found: {{ edx_django_service_config }}
ok: [localhost]

TASK [edx_service : Install a bunch of system packages on which edx_service relies] ***
ok: [localhost] => (item=[u'gettext', u'libffi-dev', u'libmemcached-dev', u'libmysqlclient-dev', u'libssl-dev', u'libmysqlclient-dev'])

TASK [edx_service : Install a bunch of system packages on which edx_service relies] ***

TASK [edx_service : Get instance information] **********************************
ok: [localhost]

TASK [edx_service : Tag instance] **********************************************
skipping: [localhost] => (item=[{u'DOMAIN': u'github.com', u'PROTOCOL': u'https', u'DESTINATION': u'/edx/app/analytics_api/analytics_api', u'SSH_KEY': None, u'REPO': u'edx-analytics-data-api.git', u'VERSION': u'open-release/ironwood.1', u'PATH': u'edx'}, {'_ansible_parsed': True, u'changed': False, '_ansible_no_log': True, '_ansible_item_result': True, u'remote_url_changed': False, 'item': {u'DOMAIN': u'github.com', u'PROTOCOL': u'https', u'DESTINATION': u'/edx/app/analytics_api/analytics_api', u'SSH_KEY': None, u'REPO': u'edx-analytics-data-api.git', u'VERSION': u'open-release/ironwood.1', u'PATH': u'edx'}, u'invocation': {u'module_args': {u'executable': None, u'force': False, u'refspec': None, u'reference': None, u'dest': u'/edx/app/analytics_api/analytics_api', u'verify_commit': False, u'clone': True, u'umask': None, u'update': True, u'ssh_opts': None, u'repo': u'https://github.com/edx/edx-analytics-data-api.git', u'track_submodules': False, u'depth': 1, u'version': u'open-release/ironwood.1', u'bare': False, u'recursive': True, u'remote': u'origin', u'key_file': None, u'accept_hostkey': False}}, u'after': u'1e2eefc07a1ea16a95ea8eee18e524a15309b9d8', u'before': u'1e2eefc07a1ea16a95ea8eee18e524a15309b9d8'}]) 

TASK [edx_django_service : add gunicorn configuration file] ********************
ok: [localhost]

TASK [edx_django_service : install python3] ************************************
skipping: [localhost] => (item=[]) 

TASK [edx_django_service : build virtualenv with python3] **********************
skipping: [localhost]

TASK [edx_django_service : build virtualenv with python2.7] ********************
ok: [localhost]

TASK [edx_django_service : Pin pip to a specific version.] *********************
changed: [localhost]

TASK [edx_django_service : install nodenv] *************************************
changed: [localhost]

TASK [edx_django_service : create nodeenv] *************************************
ok: [localhost]

TASK [edx_django_service : install production requirements] ********************
changed: [localhost]

TASK [edx_django_service : install development requirements] *******************
skipping: [localhost]

TASK [edx_django_service : migrate database] ***********************************
changed: [localhost]

TASK [edx_django_service : run post-migrate commands] **************************

TASK [edx_django_service : ensure log files exist for tailing] *****************
changed: [localhost] => (item=/edx/var/log/supervisor/analytics_api-stdout.log)
changed: [localhost] => (item=/edx/var/log/supervisor/analytics_api-stderr.log)

TASK [edx_django_service : write out the supervisor wrapper] *******************
ok: [localhost]

TASK [edx_django_service : write supervisord config] ***************************
ok: [localhost]

TASK [edx_django_service : write devstack script] ******************************
skipping: [localhost]

TASK [edx_django_service : setup the app env file] *****************************
ok: [localhost]

TASK [edx_django_service : enable supervisor script] ***************************
ok: [localhost]

TASK [edx_django_service : update supervisor configuration] ********************
changed: [localhost]

TASK [edx_django_service : create symlinks from the venv bin dir] **************
ok: [localhost] => (item=python)
ok: [localhost] => (item=pip)
ok: [localhost] => (item=django-admin.py)

TASK [edx_django_service : create symlinks from the repo dir] ******************
ok: [localhost] => (item=manage.py)

TASK [edx_django_service : compile static assets] ******************************
changed: [localhost]

TASK [edx_django_service : restart the application] ****************************
changed: [localhost]

TASK [edx_django_service : Copying nginx configs for the service] **************
ok: [localhost]

TASK [edx_django_service : Creating nginx config links for the service] ********
ok: [localhost]

TASK [analytics_api : create api users] ****************************************
changed: [localhost] => (item={'key': u'dummy-api-user', 'value': u'changeme'})

TASK [security : Install security packages] ************************************
skipping: [localhost] => (item=[]) 

TASK [security : Update all system packages] ***********************************
skipping: [localhost]

TASK [security : Configure periodic unattended-upgrades] ***********************
skipping: [localhost]

TASK [security : Disable unattended-upgrades if Xenial (16.04)] ****************
skipping: [localhost] => (item=systemctl disable apt-daily-upgrade.timer) 
skipping: [localhost] => (item=systemctl disable apt-daily.timer) 
skipping: [localhost] => (item=systemctl disable apt-daily.service) 

TASK [security : Disable unattended-upgrades] **********************************
skipping: [localhost]

TASK [security : Only unattended-upgrade from security repo] *******************
skipping: [localhost]

TASK [security : Disable security only updates on unattended-upgrades] *********
skipping: [localhost]

TASK [security : Take security updates during ansible runs] ********************
skipping: [localhost] => (item=unattended-upgrade --dry-run) 
skipping: [localhost] => (item=unattended-upgrade) 

TASK [security : Install security packages] ************************************
skipping: [localhost] => (item=[]) 

TASK [security : Enable automatic start for update service] ********************
skipping: [localhost]

TASK [security : Update all system packages] ***********************************
skipping: [localhost]

TASK [security : Configure security auto-updates] ******************************
skipping: [localhost] => (item={u'regexp': u'^update_cmd', u'line': u'update_cmd = security'}) 
skipping: [localhost] => (item={u'regexp': u'^apply_updates', u'line': u'apply_updates = yes'}) 

TASK [security : Take security updates during ansible runs] ********************
skipping: [localhost] => (item=yum update --security -y) 
skipping: [localhost] => (item=yum check-update --security) 

TASK [security : Install security packages] ************************************
skipping: [localhost] => (item=[]) 

TASK [security : Update all system packages] ***********************************
skipping: [localhost]

TASK [security : Configure periodic unattended-upgrades] ***********************
skipping: [localhost]

TASK [security : Disable unattended-upgrades if Xenial (16.04)] ****************
skipping: [localhost] => (item=systemctl disable apt-daily-upgrade.timer) 
skipping: [localhost] => (item=systemctl disable apt-daily.timer) 
skipping: [localhost] => (item=systemctl disable apt-daily.service) 

TASK [security : Disable unattended-upgrades] **********************************
skipping: [localhost]

TASK [security : Only unattended-upgrade from security repo] *******************
skipping: [localhost]

TASK [security : Disable security only updates on unattended-upgrades] *********
skipping: [localhost]

TASK [security : Take security updates during ansible runs] ********************
skipping: [localhost] => (item=unattended-upgrade) 
skipping: [localhost] => (item=unattended-upgrade --dry-run) 

TASK [security : Install security packages] ************************************
skipping: [localhost] => (item=[]) 

TASK [security : Enable automatic start for update service] ********************
skipping: [localhost]

TASK [security : Update all system packages] ***********************************
skipping: [localhost]

TASK [security : Configure security auto-updates] ******************************
skipping: [localhost] => (item={u'regexp': u'^apply_updates', u'line': u'apply_updates = yes'}) 
skipping: [localhost] => (item={u'regexp': u'^update_cmd', u'line': u'update_cmd = security'}) 

TASK [security : Take security updates during ansible runs] ********************
skipping: [localhost] => (item=yum update --security -y) 
skipping: [localhost] => (item=yum check-update --security) 

TASK [add_user : create user groups] *******************************************
ok: [localhost] => (item=insights)

TASK [add_user : create application user] **************************************
ok: [localhost]

TASK [add_user : ensure correct ownership of home directory] *******************
ok: [localhost]

TASK [add_user : create dirs for the user] *************************************

TASK [git_clone : Set git fetch.prune to ignore deleted remote refs] ***********
changed: [localhost]

TASK [git_clone : Validate git protocol] ***************************************
skipping: [localhost] => (item=(censored due to no_log)) 

TASK [git_clone : Install read-only ssh key] ***********************************
skipping: [localhost] => (item=(censored due to no_log)) 

TASK [git_clone : Check that working tree is clean] ****************************
changed: [localhost] => (item=/edx/app/insights/edx_analytics_dashboard)

TASK [git_clone : Require a clean working tree] ********************************
skipping: [localhost] => (item={'_ansible_parsed': True, 'stderr_lines': [], u'changed': True, u'end': u'2019-05-30 01:15:13.621420', '_ansible_no_log': False, u'stdout': u'', '_ansible_item_result': True, u'rc': 0, u'start': u'2019-05-30 01:15:11.960806', u'cmd': u'test ! -e "/edx/app/insights/edx_analytics_dashboard" || git -C "/edx/app/insights/edx_analytics_dashboard" status --porcelain --untracked-files=no', 'item': u'/edx/app/insights/edx_analytics_dashboard', u'delta': u'0:00:01.660614', u'invocation': {u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': True, u'_raw_params': u'test ! -e "/edx/app/insights/edx_analytics_dashboard" || git -C "/edx/app/insights/edx_analytics_dashboard" status --porcelain --untracked-files=no', u'removes': None, u'warn': True, u'chdir': None}}, 'stdout_lines': [], u'stderr': u''}) 

TASK [git_clone : Checkout code over ssh] **************************************
skipping: [localhost] => (item=(censored due to no_log)) 

TASK [git_clone : Checkout code over https] ************************************
ok: [localhost] => (item=(censored due to no_log))

TASK [git_clone : Remove read-only ssh key] ************************************
skipping: [localhost] => (item=(censored due to no_log)) 

TASK [git_clone : Run git clean after checking out code] ***********************
changed: [localhost] => (item=(censored due to no_log))

TASK [edx_service : Create edx_service app, venv, data, and staticfiles dirs] ***
ok: [localhost] => (item=)
ok: [localhost] => (item=venvs)
ok: [localhost] => (item=data)
ok: [localhost] => (item=staticfiles)

TASK [edx_service : Create /edx/var/app dir] ***********************************
ok: [localhost]

TASK [edx_service : Create /edx/etc dir] ***************************************
changed: [localhost]

TASK [edx_service : Create edx_service log dir] ********************************
ok: [localhost] => (item=/edx/var/log/insights)

TASK [edx_service : Write out app config file] *********************************
 [WARNING]: when statements should not include jinja2 templating delimiters
such as {{ }} or {% %}. Found: {{ INSIGHTS_CONFIG }}
ok: [localhost]

TASK [edx_service : Install a bunch of system packages on which edx_service relies] ***
ok: [localhost] => (item=[u'libmysqlclient-dev', u'build-essential', u'gettext', u'openjdk-8-jdk'])

TASK [edx_service : Install a bunch of system packages on which edx_service relies] ***

TASK [edx_service : Get instance information] **********************************
ok: [localhost]

TASK [edx_service : Tag instance] **********************************************
skipping: [localhost] => (item=[{u'DOMAIN': u'github.com', u'PROTOCOL': u'https', u'DESTINATION': u'/edx/app/insights/edx_analytics_dashboard', u'SSH_KEY': None, u'REPO': u'edx-analytics-dashboard.git', u'VERSION': u'open-release/ironwood.1', u'PATH': u'edx'}, {'_ansible_parsed': True, u'changed': False, '_ansible_no_log': True, '_ansible_item_result': True, u'remote_url_changed': False, 'item': {u'DOMAIN': u'github.com', u'PROTOCOL': u'https', u'DESTINATION': u'/edx/app/insights/edx_analytics_dashboard', u'SSH_KEY': None, u'REPO': u'edx-analytics-dashboard.git', u'VERSION': u'open-release/ironwood.1', u'PATH': u'edx'}, u'invocation': {u'module_args': {u'executable': None, u'force': False, u'refspec': None, u'reference': None, u'dest': u'/edx/app/insights/edx_analytics_dashboard', u'verify_commit': False, u'clone': True, u'umask': None, u'update': True, u'ssh_opts': None, u'repo': u'https://github.com/edx/edx-analytics-dashboard.git', u'track_submodules': False, u'depth': 1, u'version': u'open-release/ironwood.1', u'bare': False, u'recursive': True, u'remote': u'origin', u'key_file': None, u'accept_hostkey': False}}, u'after': u'78a83a917256752f4731825a1a361b3488e4cf4d', u'before': u'78a83a917256752f4731825a1a361b3488e4cf4d'}]) 

TASK [insights : setup the insights env file] **********************************
ok: [localhost]

TASK [insights : install application requirements] *****************************
ok: [localhost] => (item=production.txt)
ok: [localhost] => (item=optional.txt)

TASK [insights : create nodeenv] ***********************************************
changed: [localhost]

TASK [insights : install node dependencies] ************************************
